### YamlMime:ManagedReference
items:
- uid: DotNetHelper_IO.ZipFileObject
  commentId: T:DotNetHelper_IO.ZipFileObject
  id: ZipFileObject
  parent: DotNetHelper_IO
  children:
  - DotNetHelper_IO.ZipFileObject.#ctor(DotNetHelper_IO.FolderObject,SharpCompress.Common.ArchiveType,System.String)
  - DotNetHelper_IO.ZipFileObject.#ctor(System.String,SharpCompress.Common.ArchiveType,SharpCompress.Readers.ReaderOptions,SharpCompress.Writers.WriterOptions)
  - DotNetHelper_IO.ZipFileObject.#ctor(System.String,SharpCompress.Common.ArchiveType,System.String)
  - DotNetHelper_IO.ZipFileObject.Add(DotNetHelper_IO.FileObject,DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  - DotNetHelper_IO.ZipFileObject.Add(System.Collections.Generic.IEnumerable{DotNetHelper_IO.FileObject},DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  - DotNetHelper_IO.ZipFileObject.Add(System.Collections.Generic.IEnumerable{System.String},DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  - DotNetHelper_IO.ZipFileObject.Add(System.String,DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  - DotNetHelper_IO.ZipFileObject.AddFromDirectory(System.String,System.String,System.IO.SearchOption)
  - DotNetHelper_IO.ZipFileObject.Compress(DotNetHelper_IO.FolderObject,System.String,System.IO.SearchOption)
  - DotNetHelper_IO.ZipFileObject.Compress(System.String,System.String,System.IO.SearchOption)
  - DotNetHelper_IO.ZipFileObject.CreateOrTruncate(System.Boolean)
  - DotNetHelper_IO.ZipFileObject.ExtractToDirectory(System.String,SharpCompress.Common.ExtractionOptions)
  - DotNetHelper_IO.ZipFileObject.GetEntriesCount
  - DotNetHelper_IO.ZipFileObject.GetReadableArchive
  - DotNetHelper_IO.ZipFileObject.GetWritableArchive
  - DotNetHelper_IO.ZipFileObject.ReaderOptions
  - DotNetHelper_IO.ZipFileObject.RemoveFilesToZip(System.Predicate{SharpCompress.Archives.IArchiveEntry})
  - DotNetHelper_IO.ZipFileObject.Type
  - DotNetHelper_IO.ZipFileObject.WriterOptions
  langs:
  - csharp
  - vb
  name: ZipFileObject
  nameWithType: ZipFileObject
  fullName: DotNetHelper_IO.ZipFileObject
  type: Class
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: ZipFileObject
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 23
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: 'public class ZipFileObject : FileObject, IDisposable'
    content.vb: >-
      Public Class ZipFileObject
          Inherits FileObject
          Implements IDisposable
  inheritance:
  - System.Object
  - DotNetHelper_IO.PathObject
  - DotNetHelper_IO.FileObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - DotNetHelper_IO.FileObject.DefaultEncoding
  - DotNetHelper_IO.FileObject.FileInfo
  - DotNetHelper_IO.FileObject.FileNameOnly
  - DotNetHelper_IO.FileObject.FileNameOnlyNoExtension
  - DotNetHelper_IO.FileObject.FilePathOnly
  - DotNetHelper_IO.FileObject.Extension
  - DotNetHelper_IO.FileObject.FolderNameOnly
  - DotNetHelper_IO.FileObject.Name
  - DotNetHelper_IO.FileObject.LastWriteTime
  - DotNetHelper_IO.FileObject.LastWriteTimeUtc
  - DotNetHelper_IO.FileObject.CreationTimeUtc
  - DotNetHelper_IO.FileObject.CreationTime
  - DotNetHelper_IO.FileObject.LastAccessTimeUtc
  - DotNetHelper_IO.FileObject.LastAccessTime
  - DotNetHelper_IO.FileObject.GetSize
  - DotNetHelper_IO.FileObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  - DotNetHelper_IO.FileObject.GetParentFolder
  - DotNetHelper_IO.FileObject.WatchTimeout
  - DotNetHelper_IO.FileObject.Watcher
  - DotNetHelper_IO.FileObject.NotifyFilters
  - DotNetHelper_IO.FileObject.Init(System.Boolean)
  - DotNetHelper_IO.FileObject.RefreshObject
  - DotNetHelper_IO.FileObject.CopyTo(System.String,DotNetHelper_IO.Enum.FileOption)
  - DotNetHelper_IO.FileObject.CopyToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
  - DotNetHelper_IO.FileObject.CopyToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.IProgress{System.Int64},System.Int32)
  - DotNetHelper_IO.FileObject.MoveTo(System.String,DotNetHelper_IO.Enum.FileOption)
  - DotNetHelper_IO.FileObject.MoveToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
  - DotNetHelper_IO.FileObject.ChangeExtension(System.String,DotNetHelper_IO.Enum.FileOption,System.IProgress{System.Double})
  - DotNetHelper_IO.FileObject.ChangeExtensionAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
  - DotNetHelper_IO.FileObject.DeleteFile(System.Boolean)
  - DotNetHelper_IO.FileObject.GetIncrementFileName(System.String)
  - DotNetHelper_IO.FileObject.GetIncrementExtension(System.String)
  - DotNetHelper_IO.FileObject.ReadAllLines
  - DotNetHelper_IO.FileObject.ReadAllText(System.Text.Encoding)
  - DotNetHelper_IO.FileObject.ReadToBytesInChunksAsync(System.Int32,System.Threading.CancellationToken)
  - DotNetHelper_IO.FileObject.ReadToStream(System.Int32)
  - DotNetHelper_IO.FileObject.ReadToStringInChunksAsync(System.Int32)
  - DotNetHelper_IO.FileObject.GetFileStream(DotNetHelper_IO.Enum.FileOption,System.Int32,System.Boolean)
  - DotNetHelper_IO.FileObject.Write(System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  - DotNetHelper_IO.FileObject.Write(System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
  - DotNetHelper_IO.FileObject.Write(System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
  - DotNetHelper_IO.FileObject.Write(System.IO.Stream,System.IProgress{System.Int64},DotNetHelper_IO.Enum.FileOption,System.Int32)
  - DotNetHelper_IO.FileObject.WriteAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  - DotNetHelper_IO.FileObject.WriteAsync(System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)
  - DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32,System.Threading.CancellationToken)
  - DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream,System.IProgress{System.Int64},DotNetHelper_IO.Enum.FileOption,System.Int32,System.Threading.CancellationToken)
  - DotNetHelper_IO.FileObject.StartWatching(System.IO.WatcherChangeTypes,System.Boolean,System.Nullable{System.IO.NotifyFilters})
  - DotNetHelper_IO.FileObject.StopWatching
  - DotNetHelper_IO.FileObject.SetFileAttribute(DotNetHelper_IO.Enum.AddOrRemoveEnum,System.Collections.Generic.List{System.IO.FileAttributes})
  - DotNetHelper_IO.FileObject.Dispose
  - DotNetHelper_IO.FileObject.Dispose(System.Boolean)
  - DotNetHelper_IO.PathObject.FullName
  - DotNetHelper_IO.PathObject.PathType
  - DotNetHelper_IO.PathObject.SizeInBytes
  - DotNetHelper_IO.PathObject.Size
  - DotNetHelper_IO.PathObject.Exist
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotNetHelper_IO.ZipFileObject.ReaderOptions
  commentId: P:DotNetHelper_IO.ZipFileObject.ReaderOptions
  id: ReaderOptions
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: ReaderOptions
  nameWithType: ZipFileObject.ReaderOptions
  fullName: DotNetHelper_IO.ZipFileObject.ReaderOptions
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: ReaderOptions
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 25
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public ReaderOptions ReaderOptions { get; set; }
    parameters: []
    return:
      type: SharpCompress.Readers.ReaderOptions
    content.vb: Public Property ReaderOptions As ReaderOptions
  overload: DotNetHelper_IO.ZipFileObject.ReaderOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.WriterOptions
  commentId: P:DotNetHelper_IO.ZipFileObject.WriterOptions
  id: WriterOptions
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: WriterOptions
  nameWithType: ZipFileObject.WriterOptions
  fullName: DotNetHelper_IO.ZipFileObject.WriterOptions
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: WriterOptions
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 26
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public WriterOptions WriterOptions { get; set; }
    parameters: []
    return:
      type: SharpCompress.Writers.WriterOptions
    content.vb: Public Property WriterOptions As WriterOptions
  overload: DotNetHelper_IO.ZipFileObject.WriterOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.Type
  commentId: P:DotNetHelper_IO.ZipFileObject.Type
  id: Type
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ZipFileObject.Type
  fullName: DotNetHelper_IO.ZipFileObject.Type
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Type
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 27
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public ArchiveType Type { get; }
    parameters: []
    return:
      type: SharpCompress.Common.ArchiveType
    content.vb: Public ReadOnly Property Type As ArchiveType
  overload: DotNetHelper_IO.ZipFileObject.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_IO.ZipFileObject.#ctor(System.String,SharpCompress.Common.ArchiveType,System.String)
  commentId: M:DotNetHelper_IO.ZipFileObject.#ctor(System.String,SharpCompress.Common.ArchiveType,System.String)
  id: '#ctor(System.String,SharpCompress.Common.ArchiveType,System.String)'
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: ZipFileObject(String, ArchiveType, String)
  nameWithType: ZipFileObject.ZipFileObject(String, ArchiveType, String)
  fullName: DotNetHelper_IO.ZipFileObject.ZipFileObject(System.String, SharpCompress.Common.ArchiveType, System.String)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: .ctor
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 30
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public ZipFileObject(string fullFilePath, ArchiveType type, string password = null)
    parameters:
    - id: fullFilePath
      type: System.String
    - id: type
      type: SharpCompress.Common.ArchiveType
    - id: password
      type: System.String
    content.vb: Public Sub New(fullFilePath As String, type As ArchiveType, password As String = Nothing)
  overload: DotNetHelper_IO.ZipFileObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.#ctor(DotNetHelper_IO.FolderObject,SharpCompress.Common.ArchiveType,System.String)
  commentId: M:DotNetHelper_IO.ZipFileObject.#ctor(DotNetHelper_IO.FolderObject,SharpCompress.Common.ArchiveType,System.String)
  id: '#ctor(DotNetHelper_IO.FolderObject,SharpCompress.Common.ArchiveType,System.String)'
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: ZipFileObject(FolderObject, ArchiveType, String)
  nameWithType: ZipFileObject.ZipFileObject(FolderObject, ArchiveType, String)
  fullName: DotNetHelper_IO.ZipFileObject.ZipFileObject(DotNetHelper_IO.FolderObject, SharpCompress.Common.ArchiveType, System.String)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: .ctor
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 39
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public ZipFileObject(FolderObject folderObject, ArchiveType type, string password = null)
    parameters:
    - id: folderObject
      type: DotNetHelper_IO.FolderObject
    - id: type
      type: SharpCompress.Common.ArchiveType
    - id: password
      type: System.String
    content.vb: Public Sub New(folderObject As FolderObject, type As ArchiveType, password As String = Nothing)
  overload: DotNetHelper_IO.ZipFileObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.#ctor(System.String,SharpCompress.Common.ArchiveType,SharpCompress.Readers.ReaderOptions,SharpCompress.Writers.WriterOptions)
  commentId: M:DotNetHelper_IO.ZipFileObject.#ctor(System.String,SharpCompress.Common.ArchiveType,SharpCompress.Readers.ReaderOptions,SharpCompress.Writers.WriterOptions)
  id: '#ctor(System.String,SharpCompress.Common.ArchiveType,SharpCompress.Readers.ReaderOptions,SharpCompress.Writers.WriterOptions)'
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: ZipFileObject(String, ArchiveType, ReaderOptions, WriterOptions)
  nameWithType: ZipFileObject.ZipFileObject(String, ArchiveType, ReaderOptions, WriterOptions)
  fullName: DotNetHelper_IO.ZipFileObject.ZipFileObject(System.String, SharpCompress.Common.ArchiveType, SharpCompress.Readers.ReaderOptions, SharpCompress.Writers.WriterOptions)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: .ctor
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 47
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public ZipFileObject(string fullFilePath, ArchiveType type, ReaderOptions readerOptions, WriterOptions writerOptions)
    parameters:
    - id: fullFilePath
      type: System.String
    - id: type
      type: SharpCompress.Common.ArchiveType
    - id: readerOptions
      type: SharpCompress.Readers.ReaderOptions
    - id: writerOptions
      type: SharpCompress.Writers.WriterOptions
    content.vb: Public Sub New(fullFilePath As String, type As ArchiveType, readerOptions As ReaderOptions, writerOptions As WriterOptions)
  overload: DotNetHelper_IO.ZipFileObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.GetWritableArchive
  commentId: M:DotNetHelper_IO.ZipFileObject.GetWritableArchive
  id: GetWritableArchive
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: GetWritableArchive()
  nameWithType: ZipFileObject.GetWritableArchive()
  fullName: DotNetHelper_IO.ZipFileObject.GetWritableArchive()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: GetWritableArchive
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 55
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public IWritableArchive GetWritableArchive()
    return:
      type: SharpCompress.Archives.IWritableArchive
    content.vb: Public Function GetWritableArchive As IWritableArchive
  overload: DotNetHelper_IO.ZipFileObject.GetWritableArchive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.GetReadableArchive
  commentId: M:DotNetHelper_IO.ZipFileObject.GetReadableArchive
  id: GetReadableArchive
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: GetReadableArchive()
  nameWithType: ZipFileObject.GetReadableArchive()
  fullName: DotNetHelper_IO.ZipFileObject.GetReadableArchive()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: GetReadableArchive
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 72
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public IArchive GetReadableArchive()
    return:
      type: SharpCompress.Archives.IArchive
    content.vb: Public Function GetReadableArchive As IArchive
  overload: DotNetHelper_IO.ZipFileObject.GetReadableArchive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.GetEntriesCount
  commentId: M:DotNetHelper_IO.ZipFileObject.GetEntriesCount
  id: GetEntriesCount
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: GetEntriesCount()
  nameWithType: ZipFileObject.GetEntriesCount()
  fullName: DotNetHelper_IO.ZipFileObject.GetEntriesCount()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: GetEntriesCount
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 91
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public int GetEntriesCount()
    return:
      type: System.Int32
    content.vb: Public Function GetEntriesCount As Integer
  overload: DotNetHelper_IO.ZipFileObject.GetEntriesCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.CreateOrTruncate(System.Boolean)
  commentId: M:DotNetHelper_IO.ZipFileObject.CreateOrTruncate(System.Boolean)
  id: CreateOrTruncate(System.Boolean)
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: CreateOrTruncate(Boolean)
  nameWithType: ZipFileObject.CreateOrTruncate(Boolean)
  fullName: DotNetHelper_IO.ZipFileObject.CreateOrTruncate(System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: CreateOrTruncate
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 125
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nCreates a empty zip file if it doesn&apos;t exist otherwise truncates it if set to <code>true</code> [overwrite existing files].\n"
  example: []
  syntax:
    content: public bool CreateOrTruncate(bool truncate = true)
    parameters:
    - id: truncate
      type: System.Boolean
      description: if set to <code>true</code> [truncate].
    return:
      type: System.Boolean
      description: <code>true</code> if XXXX, <code>false</code> otherwise.
    content.vb: Public Function CreateOrTruncate(truncate As Boolean = True) As Boolean
  overload: DotNetHelper_IO.ZipFileObject.CreateOrTruncate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.ExtractToDirectory(System.String,SharpCompress.Common.ExtractionOptions)
  commentId: M:DotNetHelper_IO.ZipFileObject.ExtractToDirectory(System.String,SharpCompress.Common.ExtractionOptions)
  id: ExtractToDirectory(System.String,SharpCompress.Common.ExtractionOptions)
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: ExtractToDirectory(String, ExtractionOptions)
  nameWithType: ZipFileObject.ExtractToDirectory(String, ExtractionOptions)
  fullName: DotNetHelper_IO.ZipFileObject.ExtractToDirectory(System.String, SharpCompress.Common.ExtractionOptions)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: ExtractToDirectory
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 149
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public void ExtractToDirectory(string fullFolderPath, ExtractionOptions extractionOptions = null)
    parameters:
    - id: fullFolderPath
      type: System.String
    - id: extractionOptions
      type: SharpCompress.Common.ExtractionOptions
    content.vb: Public Sub ExtractToDirectory(fullFolderPath As String, extractionOptions As ExtractionOptions = Nothing)
  overload: DotNetHelper_IO.ZipFileObject.ExtractToDirectory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.Compress(DotNetHelper_IO.FolderObject,System.String,System.IO.SearchOption)
  commentId: M:DotNetHelper_IO.ZipFileObject.Compress(DotNetHelper_IO.FolderObject,System.String,System.IO.SearchOption)
  id: Compress(DotNetHelper_IO.FolderObject,System.String,System.IO.SearchOption)
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: Compress(FolderObject, String, SearchOption)
  nameWithType: ZipFileObject.Compress(FolderObject, String, SearchOption)
  fullName: DotNetHelper_IO.ZipFileObject.Compress(DotNetHelper_IO.FolderObject, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Compress
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 154
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public void Compress(FolderObject folderObject, string searchPattern = "*", SearchOption searchOption = SearchOption.AllDirectories)
    parameters:
    - id: folderObject
      type: DotNetHelper_IO.FolderObject
    - id: searchPattern
      type: System.String
    - id: searchOption
      type: System.IO.SearchOption
    content.vb: Public Sub Compress(folderObject As FolderObject, searchPattern As String = "*", searchOption As SearchOption = SearchOption.AllDirectories)
  overload: DotNetHelper_IO.ZipFileObject.Compress*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.Compress(System.String,System.String,System.IO.SearchOption)
  commentId: M:DotNetHelper_IO.ZipFileObject.Compress(System.String,System.String,System.IO.SearchOption)
  id: Compress(System.String,System.String,System.IO.SearchOption)
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: Compress(String, String, SearchOption)
  nameWithType: ZipFileObject.Compress(String, String, SearchOption)
  fullName: DotNetHelper_IO.ZipFileObject.Compress(System.String, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Compress
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 158
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public void Compress(string fullFolderPathToCompress, string searchPattern = "*", SearchOption searchOption = SearchOption.AllDirectories)
    parameters:
    - id: fullFolderPathToCompress
      type: System.String
    - id: searchPattern
      type: System.String
    - id: searchOption
      type: System.IO.SearchOption
    content.vb: Public Sub Compress(fullFolderPathToCompress As String, searchPattern As String = "*", searchOption As SearchOption = SearchOption.AllDirectories)
  overload: DotNetHelper_IO.ZipFileObject.Compress*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.RemoveFilesToZip(System.Predicate{SharpCompress.Archives.IArchiveEntry})
  commentId: M:DotNetHelper_IO.ZipFileObject.RemoveFilesToZip(System.Predicate{SharpCompress.Archives.IArchiveEntry})
  id: RemoveFilesToZip(System.Predicate{SharpCompress.Archives.IArchiveEntry})
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: RemoveFilesToZip(Predicate<IArchiveEntry>)
  nameWithType: ZipFileObject.RemoveFilesToZip(Predicate<IArchiveEntry>)
  fullName: DotNetHelper_IO.ZipFileObject.RemoveFilesToZip(System.Predicate<SharpCompress.Archives.IArchiveEntry>)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: RemoveFilesToZip
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 166
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public void RemoveFilesToZip(Predicate<IArchiveEntry> whereClause)
    parameters:
    - id: whereClause
      type: System.Predicate{SharpCompress.Archives.IArchiveEntry}
    content.vb: Public Sub RemoveFilesToZip(whereClause As Predicate(Of IArchiveEntry))
  overload: DotNetHelper_IO.ZipFileObject.RemoveFilesToZip*
  nameWithType.vb: ZipFileObject.RemoveFilesToZip(Predicate(Of IArchiveEntry))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_IO.ZipFileObject.RemoveFilesToZip(System.Predicate(Of SharpCompress.Archives.IArchiveEntry))
  name.vb: RemoveFilesToZip(Predicate(Of IArchiveEntry))
- uid: DotNetHelper_IO.ZipFileObject.AddFromDirectory(System.String,System.String,System.IO.SearchOption)
  commentId: M:DotNetHelper_IO.ZipFileObject.AddFromDirectory(System.String,System.String,System.IO.SearchOption)
  id: AddFromDirectory(System.String,System.String,System.IO.SearchOption)
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: AddFromDirectory(String, String, SearchOption)
  nameWithType: ZipFileObject.AddFromDirectory(String, String, SearchOption)
  fullName: DotNetHelper_IO.ZipFileObject.AddFromDirectory(System.String, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: AddFromDirectory
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 184
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public void AddFromDirectory(string folderFullPath, string searchPattern = "*", SearchOption searchOption = SearchOption.AllDirectories)
    parameters:
    - id: folderFullPath
      type: System.String
    - id: searchPattern
      type: System.String
    - id: searchOption
      type: System.IO.SearchOption
    content.vb: Public Sub AddFromDirectory(folderFullPath As String, searchPattern As String = "*", searchOption As SearchOption = SearchOption.AllDirectories)
  overload: DotNetHelper_IO.ZipFileObject.AddFromDirectory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.Add(System.String,DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  commentId: M:DotNetHelper_IO.ZipFileObject.Add(System.String,DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  id: Add(System.String,DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: Add(String, FileOption, WriterOptions)
  nameWithType: ZipFileObject.Add(String, FileOption, WriterOptions)
  fullName: DotNetHelper_IO.ZipFileObject.Add(System.String, DotNetHelper_IO.Enum.FileOption, SharpCompress.Writers.WriterOptions)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Add
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 194
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public void Add(string fileFullPath, FileOption option = FileOption.Overwrite, WriterOptions writerOptions = null)
    parameters:
    - id: fileFullPath
      type: System.String
    - id: option
      type: DotNetHelper_IO.Enum.FileOption
    - id: writerOptions
      type: SharpCompress.Writers.WriterOptions
    content.vb: Public Sub Add(fileFullPath As String, option As FileOption = FileOption.Overwrite, writerOptions As WriterOptions = Nothing)
  overload: DotNetHelper_IO.ZipFileObject.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.Add(DotNetHelper_IO.FileObject,DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  commentId: M:DotNetHelper_IO.ZipFileObject.Add(DotNetHelper_IO.FileObject,DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  id: Add(DotNetHelper_IO.FileObject,DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: Add(FileObject, FileOption, WriterOptions)
  nameWithType: ZipFileObject.Add(FileObject, FileOption, WriterOptions)
  fullName: DotNetHelper_IO.ZipFileObject.Add(DotNetHelper_IO.FileObject, DotNetHelper_IO.Enum.FileOption, SharpCompress.Writers.WriterOptions)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Add
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 199
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public void Add(FileObject fileObject, FileOption option = FileOption.Overwrite, WriterOptions writerOptions = null)
    parameters:
    - id: fileObject
      type: DotNetHelper_IO.FileObject
    - id: option
      type: DotNetHelper_IO.Enum.FileOption
    - id: writerOptions
      type: SharpCompress.Writers.WriterOptions
    content.vb: Public Sub Add(fileObject As FileObject, option As FileOption = FileOption.Overwrite, writerOptions As WriterOptions = Nothing)
  overload: DotNetHelper_IO.ZipFileObject.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.ZipFileObject.Add(System.Collections.Generic.IEnumerable{System.String},DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  commentId: M:DotNetHelper_IO.ZipFileObject.Add(System.Collections.Generic.IEnumerable{System.String},DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  id: Add(System.Collections.Generic.IEnumerable{System.String},DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<String>, FileOption, WriterOptions)
  nameWithType: ZipFileObject.Add(IEnumerable<String>, FileOption, WriterOptions)
  fullName: DotNetHelper_IO.ZipFileObject.Add(System.Collections.Generic.IEnumerable<System.String>, DotNetHelper_IO.Enum.FileOption, SharpCompress.Writers.WriterOptions)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Add
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 210
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\n\n"
  example: []
  syntax:
    content: public void Add(IEnumerable<string> fileFullPaths, FileOption option = FileOption.Overwrite, WriterOptions writerOptions = null)
    parameters:
    - id: fileFullPaths
      type: System.Collections.Generic.IEnumerable{System.String}
      description: 'new files to be added to the zip file '
    - id: option
      type: DotNetHelper_IO.Enum.FileOption
      description: how to handle files that will be added to the zip
    - id: writerOptions
      type: SharpCompress.Writers.WriterOptions
      description: ''
    content.vb: Public Sub Add(fileFullPaths As IEnumerable(Of String), option As FileOption = FileOption.Overwrite, writerOptions As WriterOptions = Nothing)
  overload: DotNetHelper_IO.ZipFileObject.Add*
  nameWithType.vb: ZipFileObject.Add(IEnumerable(Of String), FileOption, WriterOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_IO.ZipFileObject.Add(System.Collections.Generic.IEnumerable(Of System.String), DotNetHelper_IO.Enum.FileOption, SharpCompress.Writers.WriterOptions)
  name.vb: Add(IEnumerable(Of String), FileOption, WriterOptions)
- uid: DotNetHelper_IO.ZipFileObject.Add(System.Collections.Generic.IEnumerable{DotNetHelper_IO.FileObject},DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  commentId: M:DotNetHelper_IO.ZipFileObject.Add(System.Collections.Generic.IEnumerable{DotNetHelper_IO.FileObject},DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  id: Add(System.Collections.Generic.IEnumerable{DotNetHelper_IO.FileObject},DotNetHelper_IO.Enum.FileOption,SharpCompress.Writers.WriterOptions)
  parent: DotNetHelper_IO.ZipFileObject
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<FileObject>, FileOption, WriterOptions)
  nameWithType: ZipFileObject.Add(IEnumerable<FileObject>, FileOption, WriterOptions)
  fullName: DotNetHelper_IO.ZipFileObject.Add(System.Collections.Generic.IEnumerable<DotNetHelper_IO.FileObject>, DotNetHelper_IO.Enum.FileOption, SharpCompress.Writers.WriterOptions)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/ZipFileObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Add
    path: ../src/DotNetHelper-IO/ZipFileObject.cs
    startLine: 221
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\n\n"
  example: []
  syntax:
    content: public void Add(IEnumerable<FileObject> files, FileOption option = FileOption.Overwrite, WriterOptions writerOptions = null)
    parameters:
    - id: files
      type: System.Collections.Generic.IEnumerable{DotNetHelper_IO.FileObject}
      description: 'new files to be added to the zip file '
    - id: option
      type: DotNetHelper_IO.Enum.FileOption
      description: how to handle files that will be added to the zip
    - id: writerOptions
      type: SharpCompress.Writers.WriterOptions
      description: ''
    content.vb: Public Sub Add(files As IEnumerable(Of FileObject), option As FileOption = FileOption.Overwrite, writerOptions As WriterOptions = Nothing)
  overload: DotNetHelper_IO.ZipFileObject.Add*
  nameWithType.vb: ZipFileObject.Add(IEnumerable(Of FileObject), FileOption, WriterOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_IO.ZipFileObject.Add(System.Collections.Generic.IEnumerable(Of DotNetHelper_IO.FileObject), DotNetHelper_IO.Enum.FileOption, SharpCompress.Writers.WriterOptions)
  name.vb: Add(IEnumerable(Of FileObject), FileOption, WriterOptions)
references:
- uid: DotNetHelper_IO
  commentId: N:DotNetHelper_IO
  name: DotNetHelper_IO
  nameWithType: DotNetHelper_IO
  fullName: DotNetHelper_IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetHelper_IO.PathObject
  commentId: T:DotNetHelper_IO.PathObject
  parent: DotNetHelper_IO
  name: PathObject
  nameWithType: PathObject
  fullName: DotNetHelper_IO.PathObject
- uid: DotNetHelper_IO.FileObject
  commentId: T:DotNetHelper_IO.FileObject
  parent: DotNetHelper_IO
  name: FileObject
  nameWithType: FileObject
  fullName: DotNetHelper_IO.FileObject
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: DotNetHelper_IO.FileObject.DefaultEncoding
  commentId: P:DotNetHelper_IO.FileObject.DefaultEncoding
  parent: DotNetHelper_IO.FileObject
  name: DefaultEncoding
  nameWithType: FileObject.DefaultEncoding
  fullName: DotNetHelper_IO.FileObject.DefaultEncoding
- uid: DotNetHelper_IO.FileObject.FileInfo
  commentId: P:DotNetHelper_IO.FileObject.FileInfo
  parent: DotNetHelper_IO.FileObject
  name: FileInfo
  nameWithType: FileObject.FileInfo
  fullName: DotNetHelper_IO.FileObject.FileInfo
- uid: DotNetHelper_IO.FileObject.FileNameOnly
  commentId: P:DotNetHelper_IO.FileObject.FileNameOnly
  parent: DotNetHelper_IO.FileObject
  name: FileNameOnly
  nameWithType: FileObject.FileNameOnly
  fullName: DotNetHelper_IO.FileObject.FileNameOnly
- uid: DotNetHelper_IO.FileObject.FileNameOnlyNoExtension
  commentId: P:DotNetHelper_IO.FileObject.FileNameOnlyNoExtension
  parent: DotNetHelper_IO.FileObject
  name: FileNameOnlyNoExtension
  nameWithType: FileObject.FileNameOnlyNoExtension
  fullName: DotNetHelper_IO.FileObject.FileNameOnlyNoExtension
- uid: DotNetHelper_IO.FileObject.FilePathOnly
  commentId: P:DotNetHelper_IO.FileObject.FilePathOnly
  parent: DotNetHelper_IO.FileObject
  name: FilePathOnly
  nameWithType: FileObject.FilePathOnly
  fullName: DotNetHelper_IO.FileObject.FilePathOnly
- uid: DotNetHelper_IO.FileObject.Extension
  commentId: P:DotNetHelper_IO.FileObject.Extension
  parent: DotNetHelper_IO.FileObject
  name: Extension
  nameWithType: FileObject.Extension
  fullName: DotNetHelper_IO.FileObject.Extension
- uid: DotNetHelper_IO.FileObject.FolderNameOnly
  commentId: P:DotNetHelper_IO.FileObject.FolderNameOnly
  parent: DotNetHelper_IO.FileObject
  name: FolderNameOnly
  nameWithType: FileObject.FolderNameOnly
  fullName: DotNetHelper_IO.FileObject.FolderNameOnly
- uid: DotNetHelper_IO.FileObject.Name
  commentId: P:DotNetHelper_IO.FileObject.Name
  parent: DotNetHelper_IO.FileObject
  name: Name
  nameWithType: FileObject.Name
  fullName: DotNetHelper_IO.FileObject.Name
- uid: DotNetHelper_IO.FileObject.LastWriteTime
  commentId: P:DotNetHelper_IO.FileObject.LastWriteTime
  parent: DotNetHelper_IO.FileObject
  name: LastWriteTime
  nameWithType: FileObject.LastWriteTime
  fullName: DotNetHelper_IO.FileObject.LastWriteTime
- uid: DotNetHelper_IO.FileObject.LastWriteTimeUtc
  commentId: P:DotNetHelper_IO.FileObject.LastWriteTimeUtc
  parent: DotNetHelper_IO.FileObject
  name: LastWriteTimeUtc
  nameWithType: FileObject.LastWriteTimeUtc
  fullName: DotNetHelper_IO.FileObject.LastWriteTimeUtc
- uid: DotNetHelper_IO.FileObject.CreationTimeUtc
  commentId: P:DotNetHelper_IO.FileObject.CreationTimeUtc
  parent: DotNetHelper_IO.FileObject
  name: CreationTimeUtc
  nameWithType: FileObject.CreationTimeUtc
  fullName: DotNetHelper_IO.FileObject.CreationTimeUtc
- uid: DotNetHelper_IO.FileObject.CreationTime
  commentId: P:DotNetHelper_IO.FileObject.CreationTime
  parent: DotNetHelper_IO.FileObject
  name: CreationTime
  nameWithType: FileObject.CreationTime
  fullName: DotNetHelper_IO.FileObject.CreationTime
- uid: DotNetHelper_IO.FileObject.LastAccessTimeUtc
  commentId: P:DotNetHelper_IO.FileObject.LastAccessTimeUtc
  parent: DotNetHelper_IO.FileObject
  name: LastAccessTimeUtc
  nameWithType: FileObject.LastAccessTimeUtc
  fullName: DotNetHelper_IO.FileObject.LastAccessTimeUtc
- uid: DotNetHelper_IO.FileObject.LastAccessTime
  commentId: P:DotNetHelper_IO.FileObject.LastAccessTime
  parent: DotNetHelper_IO.FileObject
  name: LastAccessTime
  nameWithType: FileObject.LastAccessTime
  fullName: DotNetHelper_IO.FileObject.LastAccessTime
- uid: DotNetHelper_IO.FileObject.GetSize
  commentId: M:DotNetHelper_IO.FileObject.GetSize
  parent: DotNetHelper_IO.FileObject
  name: GetSize()
  nameWithType: FileObject.GetSize()
  fullName: DotNetHelper_IO.FileObject.GetSize()
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.GetSize
    name: GetSize
    nameWithType: FileObject.GetSize
    fullName: DotNetHelper_IO.FileObject.GetSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.GetSize
    name: GetSize
    nameWithType: FileObject.GetSize
    fullName: DotNetHelper_IO.FileObject.GetSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  commentId: M:DotNetHelper_IO.FileObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  parent: DotNetHelper_IO.FileObject
  name: GetSize(SizeUnits)
  nameWithType: FileObject.GetSize(SizeUnits)
  fullName: DotNetHelper_IO.FileObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
    name: GetSize
    nameWithType: FileObject.GetSize
    fullName: DotNetHelper_IO.FileObject.GetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetHelper_IO.Enum.SizeUnits
    name: SizeUnits
    nameWithType: SizeUnits
    fullName: DotNetHelper_IO.Enum.SizeUnits
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
    name: GetSize
    nameWithType: FileObject.GetSize
    fullName: DotNetHelper_IO.FileObject.GetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetHelper_IO.Enum.SizeUnits
    name: SizeUnits
    nameWithType: SizeUnits
    fullName: DotNetHelper_IO.Enum.SizeUnits
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.GetParentFolder
  commentId: M:DotNetHelper_IO.FileObject.GetParentFolder
  parent: DotNetHelper_IO.FileObject
  name: GetParentFolder()
  nameWithType: FileObject.GetParentFolder()
  fullName: DotNetHelper_IO.FileObject.GetParentFolder()
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.GetParentFolder
    name: GetParentFolder
    nameWithType: FileObject.GetParentFolder
    fullName: DotNetHelper_IO.FileObject.GetParentFolder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.GetParentFolder
    name: GetParentFolder
    nameWithType: FileObject.GetParentFolder
    fullName: DotNetHelper_IO.FileObject.GetParentFolder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.WatchTimeout
  commentId: P:DotNetHelper_IO.FileObject.WatchTimeout
  parent: DotNetHelper_IO.FileObject
  name: WatchTimeout
  nameWithType: FileObject.WatchTimeout
  fullName: DotNetHelper_IO.FileObject.WatchTimeout
- uid: DotNetHelper_IO.FileObject.Watcher
  commentId: P:DotNetHelper_IO.FileObject.Watcher
  parent: DotNetHelper_IO.FileObject
  name: Watcher
  nameWithType: FileObject.Watcher
  fullName: DotNetHelper_IO.FileObject.Watcher
- uid: DotNetHelper_IO.FileObject.NotifyFilters
  commentId: P:DotNetHelper_IO.FileObject.NotifyFilters
  parent: DotNetHelper_IO.FileObject
  name: NotifyFilters
  nameWithType: FileObject.NotifyFilters
  fullName: DotNetHelper_IO.FileObject.NotifyFilters
- uid: DotNetHelper_IO.FileObject.Init(System.Boolean)
  commentId: M:DotNetHelper_IO.FileObject.Init(System.Boolean)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: Init(Boolean)
  nameWithType: FileObject.Init(Boolean)
  fullName: DotNetHelper_IO.FileObject.Init(System.Boolean)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.Init(System.Boolean)
    name: Init
    nameWithType: FileObject.Init
    fullName: DotNetHelper_IO.FileObject.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.Init(System.Boolean)
    name: Init
    nameWithType: FileObject.Init
    fullName: DotNetHelper_IO.FileObject.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.RefreshObject
  commentId: M:DotNetHelper_IO.FileObject.RefreshObject
  parent: DotNetHelper_IO.FileObject
  name: RefreshObject()
  nameWithType: FileObject.RefreshObject()
  fullName: DotNetHelper_IO.FileObject.RefreshObject()
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.RefreshObject
    name: RefreshObject
    nameWithType: FileObject.RefreshObject
    fullName: DotNetHelper_IO.FileObject.RefreshObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.RefreshObject
    name: RefreshObject
    nameWithType: FileObject.RefreshObject
    fullName: DotNetHelper_IO.FileObject.RefreshObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.CopyTo(System.String,DotNetHelper_IO.Enum.FileOption)
  commentId: M:DotNetHelper_IO.FileObject.CopyTo(System.String,DotNetHelper_IO.Enum.FileOption)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: CopyTo(String, FileOption)
  nameWithType: FileObject.CopyTo(String, FileOption)
  fullName: DotNetHelper_IO.FileObject.CopyTo(System.String, DotNetHelper_IO.Enum.FileOption)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.CopyTo(System.String,DotNetHelper_IO.Enum.FileOption)
    name: CopyTo
    nameWithType: FileObject.CopyTo
    fullName: DotNetHelper_IO.FileObject.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.CopyTo(System.String,DotNetHelper_IO.Enum.FileOption)
    name: CopyTo
    nameWithType: FileObject.CopyTo
    fullName: DotNetHelper_IO.FileObject.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.CopyToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
  commentId: M:DotNetHelper_IO.FileObject.CopyToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: CopyToAsync(String, FileOption, CancellationToken, Int32)
  nameWithType: FileObject.CopyToAsync(String, FileOption, CancellationToken, Int32)
  fullName: DotNetHelper_IO.FileObject.CopyToAsync(System.String, DotNetHelper_IO.Enum.FileOption, System.Threading.CancellationToken, System.Int32)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.CopyToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
    name: CopyToAsync
    nameWithType: FileObject.CopyToAsync
    fullName: DotNetHelper_IO.FileObject.CopyToAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.CopyToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
    name: CopyToAsync
    nameWithType: FileObject.CopyToAsync
    fullName: DotNetHelper_IO.FileObject.CopyToAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.CopyToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.IProgress{System.Int64},System.Int32)
  commentId: M:DotNetHelper_IO.FileObject.CopyToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.IProgress{System.Int64},System.Int32)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: CopyToAsync(String, FileOption, CancellationToken, IProgress<Int64>, Int32)
  nameWithType: FileObject.CopyToAsync(String, FileOption, CancellationToken, IProgress<Int64>, Int32)
  fullName: DotNetHelper_IO.FileObject.CopyToAsync(System.String, DotNetHelper_IO.Enum.FileOption, System.Threading.CancellationToken, System.IProgress<System.Int64>, System.Int32)
  nameWithType.vb: FileObject.CopyToAsync(String, FileOption, CancellationToken, IProgress(Of Int64), Int32)
  fullName.vb: DotNetHelper_IO.FileObject.CopyToAsync(System.String, DotNetHelper_IO.Enum.FileOption, System.Threading.CancellationToken, System.IProgress(Of System.Int64), System.Int32)
  name.vb: CopyToAsync(String, FileOption, CancellationToken, IProgress(Of Int64), Int32)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.CopyToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.IProgress{System.Int64},System.Int32)
    name: CopyToAsync
    nameWithType: FileObject.CopyToAsync
    fullName: DotNetHelper_IO.FileObject.CopyToAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.CopyToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.IProgress{System.Int64},System.Int32)
    name: CopyToAsync
    nameWithType: FileObject.CopyToAsync
    fullName: DotNetHelper_IO.FileObject.CopyToAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.MoveTo(System.String,DotNetHelper_IO.Enum.FileOption)
  commentId: M:DotNetHelper_IO.FileObject.MoveTo(System.String,DotNetHelper_IO.Enum.FileOption)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: MoveTo(String, FileOption)
  nameWithType: FileObject.MoveTo(String, FileOption)
  fullName: DotNetHelper_IO.FileObject.MoveTo(System.String, DotNetHelper_IO.Enum.FileOption)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.MoveTo(System.String,DotNetHelper_IO.Enum.FileOption)
    name: MoveTo
    nameWithType: FileObject.MoveTo
    fullName: DotNetHelper_IO.FileObject.MoveTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.MoveTo(System.String,DotNetHelper_IO.Enum.FileOption)
    name: MoveTo
    nameWithType: FileObject.MoveTo
    fullName: DotNetHelper_IO.FileObject.MoveTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.MoveToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
  commentId: M:DotNetHelper_IO.FileObject.MoveToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: MoveToAsync(String, FileOption, CancellationToken, Int32)
  nameWithType: FileObject.MoveToAsync(String, FileOption, CancellationToken, Int32)
  fullName: DotNetHelper_IO.FileObject.MoveToAsync(System.String, DotNetHelper_IO.Enum.FileOption, System.Threading.CancellationToken, System.Int32)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.MoveToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
    name: MoveToAsync
    nameWithType: FileObject.MoveToAsync
    fullName: DotNetHelper_IO.FileObject.MoveToAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.MoveToAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
    name: MoveToAsync
    nameWithType: FileObject.MoveToAsync
    fullName: DotNetHelper_IO.FileObject.MoveToAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.ChangeExtension(System.String,DotNetHelper_IO.Enum.FileOption,System.IProgress{System.Double})
  commentId: M:DotNetHelper_IO.FileObject.ChangeExtension(System.String,DotNetHelper_IO.Enum.FileOption,System.IProgress{System.Double})
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: ChangeExtension(String, FileOption, IProgress<Double>)
  nameWithType: FileObject.ChangeExtension(String, FileOption, IProgress<Double>)
  fullName: DotNetHelper_IO.FileObject.ChangeExtension(System.String, DotNetHelper_IO.Enum.FileOption, System.IProgress<System.Double>)
  nameWithType.vb: FileObject.ChangeExtension(String, FileOption, IProgress(Of Double))
  fullName.vb: DotNetHelper_IO.FileObject.ChangeExtension(System.String, DotNetHelper_IO.Enum.FileOption, System.IProgress(Of System.Double))
  name.vb: ChangeExtension(String, FileOption, IProgress(Of Double))
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.ChangeExtension(System.String,DotNetHelper_IO.Enum.FileOption,System.IProgress{System.Double})
    name: ChangeExtension
    nameWithType: FileObject.ChangeExtension
    fullName: DotNetHelper_IO.FileObject.ChangeExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.ChangeExtension(System.String,DotNetHelper_IO.Enum.FileOption,System.IProgress{System.Double})
    name: ChangeExtension
    nameWithType: FileObject.ChangeExtension
    fullName: DotNetHelper_IO.FileObject.ChangeExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.ChangeExtensionAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
  commentId: M:DotNetHelper_IO.FileObject.ChangeExtensionAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: ChangeExtensionAsync(String, FileOption, CancellationToken, Int32)
  nameWithType: FileObject.ChangeExtensionAsync(String, FileOption, CancellationToken, Int32)
  fullName: DotNetHelper_IO.FileObject.ChangeExtensionAsync(System.String, DotNetHelper_IO.Enum.FileOption, System.Threading.CancellationToken, System.Int32)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.ChangeExtensionAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
    name: ChangeExtensionAsync
    nameWithType: FileObject.ChangeExtensionAsync
    fullName: DotNetHelper_IO.FileObject.ChangeExtensionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.ChangeExtensionAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Threading.CancellationToken,System.Int32)
    name: ChangeExtensionAsync
    nameWithType: FileObject.ChangeExtensionAsync
    fullName: DotNetHelper_IO.FileObject.ChangeExtensionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.DeleteFile(System.Boolean)
  commentId: M:DotNetHelper_IO.FileObject.DeleteFile(System.Boolean)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: DeleteFile(Boolean)
  nameWithType: FileObject.DeleteFile(Boolean)
  fullName: DotNetHelper_IO.FileObject.DeleteFile(System.Boolean)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.DeleteFile(System.Boolean)
    name: DeleteFile
    nameWithType: FileObject.DeleteFile
    fullName: DotNetHelper_IO.FileObject.DeleteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.DeleteFile(System.Boolean)
    name: DeleteFile
    nameWithType: FileObject.DeleteFile
    fullName: DotNetHelper_IO.FileObject.DeleteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.GetIncrementFileName(System.String)
  commentId: M:DotNetHelper_IO.FileObject.GetIncrementFileName(System.String)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: GetIncrementFileName(String)
  nameWithType: FileObject.GetIncrementFileName(String)
  fullName: DotNetHelper_IO.FileObject.GetIncrementFileName(System.String)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.GetIncrementFileName(System.String)
    name: GetIncrementFileName
    nameWithType: FileObject.GetIncrementFileName
    fullName: DotNetHelper_IO.FileObject.GetIncrementFileName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.GetIncrementFileName(System.String)
    name: GetIncrementFileName
    nameWithType: FileObject.GetIncrementFileName
    fullName: DotNetHelper_IO.FileObject.GetIncrementFileName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.GetIncrementExtension(System.String)
  commentId: M:DotNetHelper_IO.FileObject.GetIncrementExtension(System.String)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: GetIncrementExtension(String)
  nameWithType: FileObject.GetIncrementExtension(String)
  fullName: DotNetHelper_IO.FileObject.GetIncrementExtension(System.String)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.GetIncrementExtension(System.String)
    name: GetIncrementExtension
    nameWithType: FileObject.GetIncrementExtension
    fullName: DotNetHelper_IO.FileObject.GetIncrementExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.GetIncrementExtension(System.String)
    name: GetIncrementExtension
    nameWithType: FileObject.GetIncrementExtension
    fullName: DotNetHelper_IO.FileObject.GetIncrementExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.ReadAllLines
  commentId: M:DotNetHelper_IO.FileObject.ReadAllLines
  parent: DotNetHelper_IO.FileObject
  name: ReadAllLines()
  nameWithType: FileObject.ReadAllLines()
  fullName: DotNetHelper_IO.FileObject.ReadAllLines()
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.ReadAllLines
    name: ReadAllLines
    nameWithType: FileObject.ReadAllLines
    fullName: DotNetHelper_IO.FileObject.ReadAllLines
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.ReadAllLines
    name: ReadAllLines
    nameWithType: FileObject.ReadAllLines
    fullName: DotNetHelper_IO.FileObject.ReadAllLines
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.ReadAllText(System.Text.Encoding)
  commentId: M:DotNetHelper_IO.FileObject.ReadAllText(System.Text.Encoding)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: ReadAllText(Encoding)
  nameWithType: FileObject.ReadAllText(Encoding)
  fullName: DotNetHelper_IO.FileObject.ReadAllText(System.Text.Encoding)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.ReadAllText(System.Text.Encoding)
    name: ReadAllText
    nameWithType: FileObject.ReadAllText
    fullName: DotNetHelper_IO.FileObject.ReadAllText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.ReadAllText(System.Text.Encoding)
    name: ReadAllText
    nameWithType: FileObject.ReadAllText
    fullName: DotNetHelper_IO.FileObject.ReadAllText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.ReadToBytesInChunksAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:DotNetHelper_IO.FileObject.ReadToBytesInChunksAsync(System.Int32,System.Threading.CancellationToken)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: ReadToBytesInChunksAsync(Int32, CancellationToken)
  nameWithType: FileObject.ReadToBytesInChunksAsync(Int32, CancellationToken)
  fullName: DotNetHelper_IO.FileObject.ReadToBytesInChunksAsync(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.ReadToBytesInChunksAsync(System.Int32,System.Threading.CancellationToken)
    name: ReadToBytesInChunksAsync
    nameWithType: FileObject.ReadToBytesInChunksAsync
    fullName: DotNetHelper_IO.FileObject.ReadToBytesInChunksAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.ReadToBytesInChunksAsync(System.Int32,System.Threading.CancellationToken)
    name: ReadToBytesInChunksAsync
    nameWithType: FileObject.ReadToBytesInChunksAsync
    fullName: DotNetHelper_IO.FileObject.ReadToBytesInChunksAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.ReadToStream(System.Int32)
  commentId: M:DotNetHelper_IO.FileObject.ReadToStream(System.Int32)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: ReadToStream(Int32)
  nameWithType: FileObject.ReadToStream(Int32)
  fullName: DotNetHelper_IO.FileObject.ReadToStream(System.Int32)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.ReadToStream(System.Int32)
    name: ReadToStream
    nameWithType: FileObject.ReadToStream
    fullName: DotNetHelper_IO.FileObject.ReadToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.ReadToStream(System.Int32)
    name: ReadToStream
    nameWithType: FileObject.ReadToStream
    fullName: DotNetHelper_IO.FileObject.ReadToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.ReadToStringInChunksAsync(System.Int32)
  commentId: M:DotNetHelper_IO.FileObject.ReadToStringInChunksAsync(System.Int32)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: ReadToStringInChunksAsync(Int32)
  nameWithType: FileObject.ReadToStringInChunksAsync(Int32)
  fullName: DotNetHelper_IO.FileObject.ReadToStringInChunksAsync(System.Int32)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.ReadToStringInChunksAsync(System.Int32)
    name: ReadToStringInChunksAsync
    nameWithType: FileObject.ReadToStringInChunksAsync
    fullName: DotNetHelper_IO.FileObject.ReadToStringInChunksAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.ReadToStringInChunksAsync(System.Int32)
    name: ReadToStringInChunksAsync
    nameWithType: FileObject.ReadToStringInChunksAsync
    fullName: DotNetHelper_IO.FileObject.ReadToStringInChunksAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.GetFileStream(DotNetHelper_IO.Enum.FileOption,System.Int32,System.Boolean)
  commentId: M:DotNetHelper_IO.FileObject.GetFileStream(DotNetHelper_IO.Enum.FileOption,System.Int32,System.Boolean)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: GetFileStream(FileOption, Int32, Boolean)
  nameWithType: FileObject.GetFileStream(FileOption, Int32, Boolean)
  fullName: DotNetHelper_IO.FileObject.GetFileStream(DotNetHelper_IO.Enum.FileOption, System.Int32, System.Boolean)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.GetFileStream(DotNetHelper_IO.Enum.FileOption,System.Int32,System.Boolean)
    name: GetFileStream
    nameWithType: FileObject.GetFileStream
    fullName: DotNetHelper_IO.FileObject.GetFileStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.GetFileStream(DotNetHelper_IO.Enum.FileOption,System.Int32,System.Boolean)
    name: GetFileStream
    nameWithType: FileObject.GetFileStream
    fullName: DotNetHelper_IO.FileObject.GetFileStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.Write(System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  commentId: M:DotNetHelper_IO.FileObject.Write(System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: Write(String, FileOption, Encoding, Int32)
  nameWithType: FileObject.Write(String, FileOption, Encoding, Int32)
  fullName: DotNetHelper_IO.FileObject.Write(System.String, DotNetHelper_IO.Enum.FileOption, System.Text.Encoding, System.Int32)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.Write(System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
    name: Write
    nameWithType: FileObject.Write
    fullName: DotNetHelper_IO.FileObject.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.Write(System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
    name: Write
    nameWithType: FileObject.Write
    fullName: DotNetHelper_IO.FileObject.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.Write(System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
  commentId: M:DotNetHelper_IO.FileObject.Write(System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: Write(Byte[], FileOption, Int32, Nullable<Int32>)
  nameWithType: FileObject.Write(Byte[], FileOption, Int32, Nullable<Int32>)
  fullName: DotNetHelper_IO.FileObject.Write(System.Byte[], DotNetHelper_IO.Enum.FileOption, System.Int32, System.Nullable<System.Int32>)
  nameWithType.vb: FileObject.Write(Byte(), FileOption, Int32, Nullable(Of Int32))
  fullName.vb: DotNetHelper_IO.FileObject.Write(System.Byte(), DotNetHelper_IO.Enum.FileOption, System.Int32, System.Nullable(Of System.Int32))
  name.vb: Write(Byte(), FileOption, Int32, Nullable(Of Int32))
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.Write(System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
    name: Write
    nameWithType: FileObject.Write
    fullName: DotNetHelper_IO.FileObject.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.Write(System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
    name: Write
    nameWithType: FileObject.Write
    fullName: DotNetHelper_IO.FileObject.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.Write(System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
  commentId: M:DotNetHelper_IO.FileObject.Write(System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: Write(Stream, FileOption, Int32)
  nameWithType: FileObject.Write(Stream, FileOption, Int32)
  fullName: DotNetHelper_IO.FileObject.Write(System.IO.Stream, DotNetHelper_IO.Enum.FileOption, System.Int32)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.Write(System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
    name: Write
    nameWithType: FileObject.Write
    fullName: DotNetHelper_IO.FileObject.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.Write(System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
    name: Write
    nameWithType: FileObject.Write
    fullName: DotNetHelper_IO.FileObject.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.Write(System.IO.Stream,System.IProgress{System.Int64},DotNetHelper_IO.Enum.FileOption,System.Int32)
  commentId: M:DotNetHelper_IO.FileObject.Write(System.IO.Stream,System.IProgress{System.Int64},DotNetHelper_IO.Enum.FileOption,System.Int32)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: Write(Stream, IProgress<Int64>, FileOption, Int32)
  nameWithType: FileObject.Write(Stream, IProgress<Int64>, FileOption, Int32)
  fullName: DotNetHelper_IO.FileObject.Write(System.IO.Stream, System.IProgress<System.Int64>, DotNetHelper_IO.Enum.FileOption, System.Int32)
  nameWithType.vb: FileObject.Write(Stream, IProgress(Of Int64), FileOption, Int32)
  fullName.vb: DotNetHelper_IO.FileObject.Write(System.IO.Stream, System.IProgress(Of System.Int64), DotNetHelper_IO.Enum.FileOption, System.Int32)
  name.vb: Write(Stream, IProgress(Of Int64), FileOption, Int32)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.Write(System.IO.Stream,System.IProgress{System.Int64},DotNetHelper_IO.Enum.FileOption,System.Int32)
    name: Write
    nameWithType: FileObject.Write
    fullName: DotNetHelper_IO.FileObject.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.Write(System.IO.Stream,System.IProgress{System.Int64},DotNetHelper_IO.Enum.FileOption,System.Int32)
    name: Write
    nameWithType: FileObject.Write
    fullName: DotNetHelper_IO.FileObject.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.WriteAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  commentId: M:DotNetHelper_IO.FileObject.WriteAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: WriteAsync(String, FileOption, Encoding, Int32)
  nameWithType: FileObject.WriteAsync(String, FileOption, Encoding, Int32)
  fullName: DotNetHelper_IO.FileObject.WriteAsync(System.String, DotNetHelper_IO.Enum.FileOption, System.Text.Encoding, System.Int32)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.WriteAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
    name: WriteAsync
    nameWithType: FileObject.WriteAsync
    fullName: DotNetHelper_IO.FileObject.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.WriteAsync(System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
    name: WriteAsync
    nameWithType: FileObject.WriteAsync
    fullName: DotNetHelper_IO.FileObject.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.WriteAsync(System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:DotNetHelper_IO.FileObject.WriteAsync(System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: WriteAsync(Byte[], FileOption, Int32, Nullable<Int32>, CancellationToken)
  nameWithType: FileObject.WriteAsync(Byte[], FileOption, Int32, Nullable<Int32>, CancellationToken)
  fullName: DotNetHelper_IO.FileObject.WriteAsync(System.Byte[], DotNetHelper_IO.Enum.FileOption, System.Int32, System.Nullable<System.Int32>, System.Threading.CancellationToken)
  nameWithType.vb: FileObject.WriteAsync(Byte(), FileOption, Int32, Nullable(Of Int32), CancellationToken)
  fullName.vb: DotNetHelper_IO.FileObject.WriteAsync(System.Byte(), DotNetHelper_IO.Enum.FileOption, System.Int32, System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), FileOption, Int32, Nullable(Of Int32), CancellationToken)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.WriteAsync(System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: FileObject.WriteAsync
    fullName: DotNetHelper_IO.FileObject.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.WriteAsync(System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: FileObject.WriteAsync
    fullName: DotNetHelper_IO.FileObject.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32,System.Threading.CancellationToken)
  commentId: M:DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32,System.Threading.CancellationToken)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: WriteAsync(Stream, FileOption, Int32, CancellationToken)
  nameWithType: FileObject.WriteAsync(Stream, FileOption, Int32, CancellationToken)
  fullName: DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream, DotNetHelper_IO.Enum.FileOption, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: FileObject.WriteAsync
    fullName: DotNetHelper_IO.FileObject.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: FileObject.WriteAsync
    fullName: DotNetHelper_IO.FileObject.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream,System.IProgress{System.Int64},DotNetHelper_IO.Enum.FileOption,System.Int32,System.Threading.CancellationToken)
  commentId: M:DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream,System.IProgress{System.Int64},DotNetHelper_IO.Enum.FileOption,System.Int32,System.Threading.CancellationToken)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: WriteAsync(Stream, IProgress<Int64>, FileOption, Int32, CancellationToken)
  nameWithType: FileObject.WriteAsync(Stream, IProgress<Int64>, FileOption, Int32, CancellationToken)
  fullName: DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream, System.IProgress<System.Int64>, DotNetHelper_IO.Enum.FileOption, System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: FileObject.WriteAsync(Stream, IProgress(Of Int64), FileOption, Int32, CancellationToken)
  fullName.vb: DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream, System.IProgress(Of System.Int64), DotNetHelper_IO.Enum.FileOption, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Stream, IProgress(Of Int64), FileOption, Int32, CancellationToken)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream,System.IProgress{System.Int64},DotNetHelper_IO.Enum.FileOption,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: FileObject.WriteAsync
    fullName: DotNetHelper_IO.FileObject.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.WriteAsync(System.IO.Stream,System.IProgress{System.Int64},DotNetHelper_IO.Enum.FileOption,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: FileObject.WriteAsync
    fullName: DotNetHelper_IO.FileObject.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_IO.Enum.FileOption
    name: FileOption
    nameWithType: FileOption
    fullName: DotNetHelper_IO.Enum.FileOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.StartWatching(System.IO.WatcherChangeTypes,System.Boolean,System.Nullable{System.IO.NotifyFilters})
  commentId: M:DotNetHelper_IO.FileObject.StartWatching(System.IO.WatcherChangeTypes,System.Boolean,System.Nullable{System.IO.NotifyFilters})
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: StartWatching(WatcherChangeTypes, Boolean, Nullable<NotifyFilters>)
  nameWithType: FileObject.StartWatching(WatcherChangeTypes, Boolean, Nullable<NotifyFilters>)
  fullName: DotNetHelper_IO.FileObject.StartWatching(System.IO.WatcherChangeTypes, System.Boolean, System.Nullable<System.IO.NotifyFilters>)
  nameWithType.vb: FileObject.StartWatching(WatcherChangeTypes, Boolean, Nullable(Of NotifyFilters))
  fullName.vb: DotNetHelper_IO.FileObject.StartWatching(System.IO.WatcherChangeTypes, System.Boolean, System.Nullable(Of System.IO.NotifyFilters))
  name.vb: StartWatching(WatcherChangeTypes, Boolean, Nullable(Of NotifyFilters))
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.StartWatching(System.IO.WatcherChangeTypes,System.Boolean,System.Nullable{System.IO.NotifyFilters})
    name: StartWatching
    nameWithType: FileObject.StartWatching
    fullName: DotNetHelper_IO.FileObject.StartWatching
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.WatcherChangeTypes
    name: WatcherChangeTypes
    nameWithType: WatcherChangeTypes
    fullName: System.IO.WatcherChangeTypes
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.NotifyFilters
    name: NotifyFilters
    nameWithType: NotifyFilters
    fullName: System.IO.NotifyFilters
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.StartWatching(System.IO.WatcherChangeTypes,System.Boolean,System.Nullable{System.IO.NotifyFilters})
    name: StartWatching
    nameWithType: FileObject.StartWatching
    fullName: DotNetHelper_IO.FileObject.StartWatching
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.WatcherChangeTypes
    name: WatcherChangeTypes
    nameWithType: WatcherChangeTypes
    fullName: System.IO.WatcherChangeTypes
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.NotifyFilters
    name: NotifyFilters
    nameWithType: NotifyFilters
    fullName: System.IO.NotifyFilters
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.StopWatching
  commentId: M:DotNetHelper_IO.FileObject.StopWatching
  parent: DotNetHelper_IO.FileObject
  name: StopWatching()
  nameWithType: FileObject.StopWatching()
  fullName: DotNetHelper_IO.FileObject.StopWatching()
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.StopWatching
    name: StopWatching
    nameWithType: FileObject.StopWatching
    fullName: DotNetHelper_IO.FileObject.StopWatching
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.StopWatching
    name: StopWatching
    nameWithType: FileObject.StopWatching
    fullName: DotNetHelper_IO.FileObject.StopWatching
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.SetFileAttribute(DotNetHelper_IO.Enum.AddOrRemoveEnum,System.Collections.Generic.List{System.IO.FileAttributes})
  commentId: M:DotNetHelper_IO.FileObject.SetFileAttribute(DotNetHelper_IO.Enum.AddOrRemoveEnum,System.Collections.Generic.List{System.IO.FileAttributes})
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: SetFileAttribute(AddOrRemoveEnum, List<FileAttributes>)
  nameWithType: FileObject.SetFileAttribute(AddOrRemoveEnum, List<FileAttributes>)
  fullName: DotNetHelper_IO.FileObject.SetFileAttribute(DotNetHelper_IO.Enum.AddOrRemoveEnum, System.Collections.Generic.List<System.IO.FileAttributes>)
  nameWithType.vb: FileObject.SetFileAttribute(AddOrRemoveEnum, List(Of FileAttributes))
  fullName.vb: DotNetHelper_IO.FileObject.SetFileAttribute(DotNetHelper_IO.Enum.AddOrRemoveEnum, System.Collections.Generic.List(Of System.IO.FileAttributes))
  name.vb: SetFileAttribute(AddOrRemoveEnum, List(Of FileAttributes))
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.SetFileAttribute(DotNetHelper_IO.Enum.AddOrRemoveEnum,System.Collections.Generic.List{System.IO.FileAttributes})
    name: SetFileAttribute
    nameWithType: FileObject.SetFileAttribute
    fullName: DotNetHelper_IO.FileObject.SetFileAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetHelper_IO.Enum.AddOrRemoveEnum
    name: AddOrRemoveEnum
    nameWithType: AddOrRemoveEnum
    fullName: DotNetHelper_IO.Enum.AddOrRemoveEnum
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.FileAttributes
    name: FileAttributes
    nameWithType: FileAttributes
    fullName: System.IO.FileAttributes
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.SetFileAttribute(DotNetHelper_IO.Enum.AddOrRemoveEnum,System.Collections.Generic.List{System.IO.FileAttributes})
    name: SetFileAttribute
    nameWithType: FileObject.SetFileAttribute
    fullName: DotNetHelper_IO.FileObject.SetFileAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetHelper_IO.Enum.AddOrRemoveEnum
    name: AddOrRemoveEnum
    nameWithType: AddOrRemoveEnum
    fullName: DotNetHelper_IO.Enum.AddOrRemoveEnum
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.FileAttributes
    name: FileAttributes
    nameWithType: FileAttributes
    fullName: System.IO.FileAttributes
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.Dispose
  commentId: M:DotNetHelper_IO.FileObject.Dispose
  parent: DotNetHelper_IO.FileObject
  name: Dispose()
  nameWithType: FileObject.Dispose()
  fullName: DotNetHelper_IO.FileObject.Dispose()
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.Dispose
    name: Dispose
    nameWithType: FileObject.Dispose
    fullName: DotNetHelper_IO.FileObject.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.Dispose
    name: Dispose
    nameWithType: FileObject.Dispose
    fullName: DotNetHelper_IO.FileObject.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FileObject.Dispose(System.Boolean)
  commentId: M:DotNetHelper_IO.FileObject.Dispose(System.Boolean)
  parent: DotNetHelper_IO.FileObject
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: FileObject.Dispose(Boolean)
  fullName: DotNetHelper_IO.FileObject.Dispose(System.Boolean)
  spec.csharp:
  - uid: DotNetHelper_IO.FileObject.Dispose(System.Boolean)
    name: Dispose
    nameWithType: FileObject.Dispose
    fullName: DotNetHelper_IO.FileObject.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.FileObject.Dispose(System.Boolean)
    name: Dispose
    nameWithType: FileObject.Dispose
    fullName: DotNetHelper_IO.FileObject.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.PathObject.FullName
  commentId: P:DotNetHelper_IO.PathObject.FullName
  parent: DotNetHelper_IO.PathObject
  name: FullName
  nameWithType: PathObject.FullName
  fullName: DotNetHelper_IO.PathObject.FullName
- uid: DotNetHelper_IO.PathObject.PathType
  commentId: P:DotNetHelper_IO.PathObject.PathType
  parent: DotNetHelper_IO.PathObject
  name: PathType
  nameWithType: PathObject.PathType
  fullName: DotNetHelper_IO.PathObject.PathType
- uid: DotNetHelper_IO.PathObject.SizeInBytes
  commentId: P:DotNetHelper_IO.PathObject.SizeInBytes
  parent: DotNetHelper_IO.PathObject
  name: SizeInBytes
  nameWithType: PathObject.SizeInBytes
  fullName: DotNetHelper_IO.PathObject.SizeInBytes
- uid: DotNetHelper_IO.PathObject.Size
  commentId: P:DotNetHelper_IO.PathObject.Size
  parent: DotNetHelper_IO.PathObject
  name: Size
  nameWithType: PathObject.Size
  fullName: DotNetHelper_IO.PathObject.Size
- uid: DotNetHelper_IO.PathObject.Exist
  commentId: P:DotNetHelper_IO.PathObject.Exist
  parent: DotNetHelper_IO.PathObject
  name: Exist
  nameWithType: PathObject.Exist
  fullName: DotNetHelper_IO.PathObject.Exist
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper_IO.ZipFileObject.ReaderOptions*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.ReaderOptions
  name: ReaderOptions
  nameWithType: ZipFileObject.ReaderOptions
  fullName: DotNetHelper_IO.ZipFileObject.ReaderOptions
- uid: SharpCompress.Readers.ReaderOptions
  commentId: T:SharpCompress.Readers.ReaderOptions
  parent: SharpCompress.Readers
  isExternal: true
  name: ReaderOptions
  nameWithType: ReaderOptions
  fullName: SharpCompress.Readers.ReaderOptions
- uid: SharpCompress.Readers
  commentId: N:SharpCompress.Readers
  isExternal: true
  name: SharpCompress.Readers
  nameWithType: SharpCompress.Readers
  fullName: SharpCompress.Readers
- uid: DotNetHelper_IO.ZipFileObject.WriterOptions*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.WriterOptions
  name: WriterOptions
  nameWithType: ZipFileObject.WriterOptions
  fullName: DotNetHelper_IO.ZipFileObject.WriterOptions
- uid: SharpCompress.Writers.WriterOptions
  commentId: T:SharpCompress.Writers.WriterOptions
  parent: SharpCompress.Writers
  isExternal: true
  name: WriterOptions
  nameWithType: WriterOptions
  fullName: SharpCompress.Writers.WriterOptions
- uid: SharpCompress.Writers
  commentId: N:SharpCompress.Writers
  isExternal: true
  name: SharpCompress.Writers
  nameWithType: SharpCompress.Writers
  fullName: SharpCompress.Writers
- uid: DotNetHelper_IO.ZipFileObject.Type*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.Type
  name: Type
  nameWithType: ZipFileObject.Type
  fullName: DotNetHelper_IO.ZipFileObject.Type
- uid: SharpCompress.Common.ArchiveType
  commentId: T:SharpCompress.Common.ArchiveType
  parent: SharpCompress.Common
  isExternal: true
  name: ArchiveType
  nameWithType: ArchiveType
  fullName: SharpCompress.Common.ArchiveType
- uid: SharpCompress.Common
  commentId: N:SharpCompress.Common
  isExternal: true
  name: SharpCompress.Common
  nameWithType: SharpCompress.Common
  fullName: SharpCompress.Common
- uid: DotNetHelper_IO.ZipFileObject.#ctor*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.#ctor
  name: ZipFileObject
  nameWithType: ZipFileObject.ZipFileObject
  fullName: DotNetHelper_IO.ZipFileObject.ZipFileObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DotNetHelper_IO.FolderObject
  commentId: T:DotNetHelper_IO.FolderObject
  parent: DotNetHelper_IO
  name: FolderObject
  nameWithType: FolderObject
  fullName: DotNetHelper_IO.FolderObject
- uid: DotNetHelper_IO.ZipFileObject.GetWritableArchive*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.GetWritableArchive
  name: GetWritableArchive
  nameWithType: ZipFileObject.GetWritableArchive
  fullName: DotNetHelper_IO.ZipFileObject.GetWritableArchive
- uid: SharpCompress.Archives.IWritableArchive
  commentId: T:SharpCompress.Archives.IWritableArchive
  parent: SharpCompress.Archives
  isExternal: true
  name: IWritableArchive
  nameWithType: IWritableArchive
  fullName: SharpCompress.Archives.IWritableArchive
- uid: SharpCompress.Archives
  commentId: N:SharpCompress.Archives
  isExternal: true
  name: SharpCompress.Archives
  nameWithType: SharpCompress.Archives
  fullName: SharpCompress.Archives
- uid: DotNetHelper_IO.ZipFileObject.GetReadableArchive*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.GetReadableArchive
  name: GetReadableArchive
  nameWithType: ZipFileObject.GetReadableArchive
  fullName: DotNetHelper_IO.ZipFileObject.GetReadableArchive
- uid: SharpCompress.Archives.IArchive
  commentId: T:SharpCompress.Archives.IArchive
  parent: SharpCompress.Archives
  isExternal: true
  name: IArchive
  nameWithType: IArchive
  fullName: SharpCompress.Archives.IArchive
- uid: DotNetHelper_IO.ZipFileObject.GetEntriesCount*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.GetEntriesCount
  name: GetEntriesCount
  nameWithType: ZipFileObject.GetEntriesCount
  fullName: DotNetHelper_IO.ZipFileObject.GetEntriesCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DotNetHelper_IO.ZipFileObject.CreateOrTruncate*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.CreateOrTruncate
  name: CreateOrTruncate
  nameWithType: ZipFileObject.CreateOrTruncate
  fullName: DotNetHelper_IO.ZipFileObject.CreateOrTruncate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DotNetHelper_IO.ZipFileObject.ExtractToDirectory*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.ExtractToDirectory
  name: ExtractToDirectory
  nameWithType: ZipFileObject.ExtractToDirectory
  fullName: DotNetHelper_IO.ZipFileObject.ExtractToDirectory
- uid: SharpCompress.Common.ExtractionOptions
  commentId: T:SharpCompress.Common.ExtractionOptions
  parent: SharpCompress.Common
  isExternal: true
  name: ExtractionOptions
  nameWithType: ExtractionOptions
  fullName: SharpCompress.Common.ExtractionOptions
- uid: DotNetHelper_IO.ZipFileObject.Compress*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.Compress
  name: Compress
  nameWithType: ZipFileObject.Compress
  fullName: DotNetHelper_IO.ZipFileObject.Compress
- uid: System.IO.SearchOption
  commentId: T:System.IO.SearchOption
  parent: System.IO
  isExternal: true
  name: SearchOption
  nameWithType: SearchOption
  fullName: System.IO.SearchOption
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: DotNetHelper_IO.ZipFileObject.RemoveFilesToZip*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.RemoveFilesToZip
  name: RemoveFilesToZip
  nameWithType: ZipFileObject.RemoveFilesToZip
  fullName: DotNetHelper_IO.ZipFileObject.RemoveFilesToZip
- uid: System.Predicate{SharpCompress.Archives.IArchiveEntry}
  commentId: T:System.Predicate{SharpCompress.Archives.IArchiveEntry}
  parent: System
  definition: System.Predicate`1
  name: Predicate<IArchiveEntry>
  nameWithType: Predicate<IArchiveEntry>
  fullName: System.Predicate<SharpCompress.Archives.IArchiveEntry>
  nameWithType.vb: Predicate(Of IArchiveEntry)
  fullName.vb: System.Predicate(Of SharpCompress.Archives.IArchiveEntry)
  name.vb: Predicate(Of IArchiveEntry)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SharpCompress.Archives.IArchiveEntry
    name: IArchiveEntry
    nameWithType: IArchiveEntry
    fullName: SharpCompress.Archives.IArchiveEntry
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SharpCompress.Archives.IArchiveEntry
    name: IArchiveEntry
    nameWithType: IArchiveEntry
    fullName: SharpCompress.Archives.IArchiveEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.ZipFileObject.AddFromDirectory*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.AddFromDirectory
  name: AddFromDirectory
  nameWithType: ZipFileObject.AddFromDirectory
  fullName: DotNetHelper_IO.ZipFileObject.AddFromDirectory
- uid: DotNetHelper_IO.ZipFileObject.Add*
  commentId: Overload:DotNetHelper_IO.ZipFileObject.Add
  name: Add
  nameWithType: ZipFileObject.Add
  fullName: DotNetHelper_IO.ZipFileObject.Add
- uid: DotNetHelper_IO.Enum.FileOption
  commentId: T:DotNetHelper_IO.Enum.FileOption
  parent: DotNetHelper_IO.Enum
  name: FileOption
  nameWithType: FileOption
  fullName: DotNetHelper_IO.Enum.FileOption
- uid: DotNetHelper_IO.Enum
  commentId: N:DotNetHelper_IO.Enum
  name: DotNetHelper_IO.Enum
  nameWithType: DotNetHelper_IO.Enum
  fullName: DotNetHelper_IO.Enum
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{DotNetHelper_IO.FileObject}
  commentId: T:System.Collections.Generic.IEnumerable{DotNetHelper_IO.FileObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FileObject>
  nameWithType: IEnumerable<FileObject>
  fullName: System.Collections.Generic.IEnumerable<DotNetHelper_IO.FileObject>
  nameWithType.vb: IEnumerable(Of FileObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of DotNetHelper_IO.FileObject)
  name.vb: IEnumerable(Of FileObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_IO.FileObject
    name: FileObject
    nameWithType: FileObject
    fullName: DotNetHelper_IO.FileObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_IO.FileObject
    name: FileObject
    nameWithType: FileObject
    fullName: DotNetHelper_IO.FileObject
  - name: )
    nameWithType: )
    fullName: )
