### YamlMime:ManagedReference
items:
- uid: DotNetHelper_IO.FolderObject
  commentId: T:DotNetHelper_IO.FolderObject
  id: FolderObject
  parent: DotNetHelper_IO
  children:
  - DotNetHelper_IO.FolderObject.#ctor(System.IO.DirectoryInfo)
  - DotNetHelper_IO.FolderObject.#ctor(System.String)
  - DotNetHelper_IO.FolderObject.AddFile(System.String,System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
  - DotNetHelper_IO.FolderObject.AddFile(System.String,System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
  - DotNetHelper_IO.FolderObject.AddFile(System.String,System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  - DotNetHelper_IO.FolderObject.AddFileAsync(System.String,System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
  - DotNetHelper_IO.FolderObject.AddFileAsync(System.String,System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
  - DotNetHelper_IO.FolderObject.AddFileAsync(System.String,System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  - DotNetHelper_IO.FolderObject.AddFolder(System.String)
  - DotNetHelper_IO.FolderObject.CopyContentsTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  - DotNetHelper_IO.FolderObject.CopyTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  - DotNetHelper_IO.FolderObject.Create(DotNetHelper_IO.Enum.FolderOption)
  - DotNetHelper_IO.FolderObject.CreationTime
  - DotNetHelper_IO.FolderObject.CreationTimeUtc
  - DotNetHelper_IO.FolderObject.Delete(System.Boolean,System.Boolean)
  - DotNetHelper_IO.FolderObject.DirectoryInfo
  - DotNetHelper_IO.FolderObject.Dispose
  - DotNetHelper_IO.FolderObject.Dispose(System.Boolean)
  - DotNetHelper_IO.FolderObject.GetDirectories(System.String,System.IO.SearchOption)
  - DotNetHelper_IO.FolderObject.GetFiles(System.String,System.IO.SearchOption)
  - DotNetHelper_IO.FolderObject.GetParentFolder
  - DotNetHelper_IO.FolderObject.GetSize
  - DotNetHelper_IO.FolderObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  - DotNetHelper_IO.FolderObject.LastAccessTime
  - DotNetHelper_IO.FolderObject.LastAccessTimeUtc
  - DotNetHelper_IO.FolderObject.LastWriteTime
  - DotNetHelper_IO.FolderObject.LastWriteTimeUtc
  - DotNetHelper_IO.FolderObject.MoveContentsTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  - DotNetHelper_IO.FolderObject.MoveTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  - DotNetHelper_IO.FolderObject.Name
  - DotNetHelper_IO.FolderObject.NotifyFilters
  - DotNetHelper_IO.FolderObject.RefreshObject
  - DotNetHelper_IO.FolderObject.StartWatching(System.IO.WatcherChangeTypes,System.Boolean)
  - DotNetHelper_IO.FolderObject.StopWatching
  - DotNetHelper_IO.FolderObject.Watcher
  - DotNetHelper_IO.FolderObject.WatchTimeout
  - DotNetHelper_IO.FolderObject.ZipFolderToFileSystem(SharpCompress.Common.ArchiveType)
  - DotNetHelper_IO.FolderObject.ZipFolderToFileSystem(System.String,SharpCompress.Common.ArchiveType,SharpCompress.Writers.WriterOptions,System.String,System.IO.SearchOption)
  - DotNetHelper_IO.FolderObject.ZipFolderToMemory
  langs:
  - csharp
  - vb
  name: FolderObject
  nameWithType: FolderObject
  fullName: DotNetHelper_IO.FolderObject
  type: Class
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: FolderObject
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 24
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nClass FolderObject.\n"
  example: []
  syntax:
    content: 'public class FolderObject : PathObject, IDisposable'
    content.vb: >-
      Public Class FolderObject
          Inherits PathObject
          Implements IDisposable
  seealso:
  - linkId: System.IDisposable
    commentId: T:System.IDisposable
  inheritance:
  - System.Object
  - DotNetHelper_IO.PathObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - DotNetHelper_IO.PathObject.FullName
  - DotNetHelper_IO.PathObject.PathType
  - DotNetHelper_IO.PathObject.SizeInBytes
  - DotNetHelper_IO.PathObject.Size
  - DotNetHelper_IO.PathObject.Exist
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotNetHelper_IO.FolderObject.DirectoryInfo
  commentId: P:DotNetHelper_IO.FolderObject.DirectoryInfo
  id: DirectoryInfo
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: DirectoryInfo
  nameWithType: FolderObject.DirectoryInfo
  fullName: DotNetHelper_IO.FolderObject.DirectoryInfo
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: DirectoryInfo
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 26
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public DirectoryInfo DirectoryInfo { get; }
    parameters: []
    return:
      type: System.IO.DirectoryInfo
    content.vb: Public ReadOnly Property DirectoryInfo As DirectoryInfo
  overload: DotNetHelper_IO.FolderObject.DirectoryInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_IO.FolderObject.Watcher
  commentId: P:DotNetHelper_IO.FolderObject.Watcher
  id: Watcher
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: Watcher
  nameWithType: FolderObject.Watcher
  fullName: DotNetHelper_IO.FolderObject.Watcher
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Watcher
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 34
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nGets the watcher.\n"
  example: []
  syntax:
    content: public FileSystemWatcher Watcher { get; set; }
    parameters: []
    return:
      type: System.IO.FileSystemWatcher
      description: The watcher.
    content.vb: Public Property Watcher As FileSystemWatcher
  overload: DotNetHelper_IO.FolderObject.Watcher*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.WatchTimeout
  commentId: P:DotNetHelper_IO.FolderObject.WatchTimeout
  id: WatchTimeout
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: WatchTimeout
  nameWithType: FolderObject.WatchTimeout
  fullName: DotNetHelper_IO.FolderObject.WatchTimeout
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: WatchTimeout
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 62
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nGets or sets the watch timeout.\n"
  example: []
  syntax:
    content: public int WatchTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The watch timeout.
    content.vb: Public Property WatchTimeout As Integer
  overload: DotNetHelper_IO.FolderObject.WatchTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.NotifyFilters
  commentId: P:DotNetHelper_IO.FolderObject.NotifyFilters
  id: NotifyFilters
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: NotifyFilters
  nameWithType: FolderObject.NotifyFilters
  fullName: DotNetHelper_IO.FolderObject.NotifyFilters
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: NotifyFilters
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 68
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nGets or sets the notify filters.\n"
  example: []
  syntax:
    content: public NotifyFilters NotifyFilters { get; set; }
    parameters: []
    return:
      type: System.IO.NotifyFilters
      description: The notify filters.
    content.vb: Public Property NotifyFilters As NotifyFilters
  overload: DotNetHelper_IO.FolderObject.NotifyFilters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.Name
  commentId: P:DotNetHelper_IO.FolderObject.Name
  id: Name
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FolderObject.Name
  fullName: DotNetHelper_IO.FolderObject.Name
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Name
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 72
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public override string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Name As String
  overridden: DotNetHelper_IO.PathObject.Name
  overload: DotNetHelper_IO.FolderObject.Name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: DotNetHelper_IO.FolderObject.LastWriteTime
  commentId: P:DotNetHelper_IO.FolderObject.LastWriteTime
  id: LastWriteTime
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: LastWriteTime
  nameWithType: FolderObject.LastWriteTime
  fullName: DotNetHelper_IO.FolderObject.LastWriteTime
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: LastWriteTime
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 75
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public override DateTime? LastWriteTime { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Overrides ReadOnly Property LastWriteTime As Date?
  overridden: DotNetHelper_IO.PathObject.LastWriteTime
  overload: DotNetHelper_IO.FolderObject.LastWriteTime*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: DotNetHelper_IO.FolderObject.LastWriteTimeUtc
  commentId: P:DotNetHelper_IO.FolderObject.LastWriteTimeUtc
  id: LastWriteTimeUtc
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: LastWriteTimeUtc
  nameWithType: FolderObject.LastWriteTimeUtc
  fullName: DotNetHelper_IO.FolderObject.LastWriteTimeUtc
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: LastWriteTimeUtc
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 76
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public override DateTime? LastWriteTimeUtc { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Overrides ReadOnly Property LastWriteTimeUtc As Date?
  overridden: DotNetHelper_IO.PathObject.LastWriteTimeUtc
  overload: DotNetHelper_IO.FolderObject.LastWriteTimeUtc*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: DotNetHelper_IO.FolderObject.CreationTimeUtc
  commentId: P:DotNetHelper_IO.FolderObject.CreationTimeUtc
  id: CreationTimeUtc
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: CreationTimeUtc
  nameWithType: FolderObject.CreationTimeUtc
  fullName: DotNetHelper_IO.FolderObject.CreationTimeUtc
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: CreationTimeUtc
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 77
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public override DateTime? CreationTimeUtc { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Overrides ReadOnly Property CreationTimeUtc As Date?
  overridden: DotNetHelper_IO.PathObject.CreationTimeUtc
  overload: DotNetHelper_IO.FolderObject.CreationTimeUtc*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: DotNetHelper_IO.FolderObject.CreationTime
  commentId: P:DotNetHelper_IO.FolderObject.CreationTime
  id: CreationTime
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: CreationTime
  nameWithType: FolderObject.CreationTime
  fullName: DotNetHelper_IO.FolderObject.CreationTime
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: CreationTime
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 78
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public override DateTime? CreationTime { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Overrides ReadOnly Property CreationTime As Date?
  overridden: DotNetHelper_IO.PathObject.CreationTime
  overload: DotNetHelper_IO.FolderObject.CreationTime*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: DotNetHelper_IO.FolderObject.LastAccessTimeUtc
  commentId: P:DotNetHelper_IO.FolderObject.LastAccessTimeUtc
  id: LastAccessTimeUtc
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: LastAccessTimeUtc
  nameWithType: FolderObject.LastAccessTimeUtc
  fullName: DotNetHelper_IO.FolderObject.LastAccessTimeUtc
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: LastAccessTimeUtc
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 79
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public override DateTime? LastAccessTimeUtc { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Overrides ReadOnly Property LastAccessTimeUtc As Date?
  overridden: DotNetHelper_IO.PathObject.LastAccessTimeUtc
  overload: DotNetHelper_IO.FolderObject.LastAccessTimeUtc*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: DotNetHelper_IO.FolderObject.LastAccessTime
  commentId: P:DotNetHelper_IO.FolderObject.LastAccessTime
  id: LastAccessTime
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: LastAccessTime
  nameWithType: FolderObject.LastAccessTime
  fullName: DotNetHelper_IO.FolderObject.LastAccessTime
  type: Property
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: LastAccessTime
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 80
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public override DateTime? LastAccessTime { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Overrides ReadOnly Property LastAccessTime As Date?
  overridden: DotNetHelper_IO.PathObject.LastAccessTime
  overload: DotNetHelper_IO.FolderObject.LastAccessTime*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: DotNetHelper_IO.FolderObject.#ctor(System.String)
  commentId: M:DotNetHelper_IO.FolderObject.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: FolderObject(String)
  nameWithType: FolderObject.FolderObject(String)
  fullName: DotNetHelper_IO.FolderObject.FolderObject(System.String)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: .ctor
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 88
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nInitializes a new instance of the <xref href=\"DotNetHelper_IO.FolderObject\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public FolderObject(string path)
    parameters:
    - id: path
      type: System.String
      description: The path.
    content.vb: Public Sub New(path As String)
  overload: DotNetHelper_IO.FolderObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.#ctor(System.IO.DirectoryInfo)
  commentId: M:DotNetHelper_IO.FolderObject.#ctor(System.IO.DirectoryInfo)
  id: '#ctor(System.IO.DirectoryInfo)'
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: FolderObject(DirectoryInfo)
  nameWithType: FolderObject.FolderObject(DirectoryInfo)
  fullName: DotNetHelper_IO.FolderObject.FolderObject(System.IO.DirectoryInfo)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: .ctor
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 96
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public FolderObject(DirectoryInfo directoryInfo)
    parameters:
    - id: directoryInfo
      type: System.IO.DirectoryInfo
    content.vb: Public Sub New(directoryInfo As DirectoryInfo)
  overload: DotNetHelper_IO.FolderObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.RefreshObject
  commentId: M:DotNetHelper_IO.FolderObject.RefreshObject
  id: RefreshObject
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: RefreshObject()
  nameWithType: FolderObject.RefreshObject()
  fullName: DotNetHelper_IO.FolderObject.RefreshObject()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: RefreshObject
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 127
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nRefreshes the object.\n"
  example: []
  syntax:
    content: public void RefreshObject()
    content.vb: Public Sub RefreshObject
  overload: DotNetHelper_IO.FolderObject.RefreshObject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.GetDirectories(System.String,System.IO.SearchOption)
  commentId: M:DotNetHelper_IO.FolderObject.GetDirectories(System.String,System.IO.SearchOption)
  id: GetDirectories(System.String,System.IO.SearchOption)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: GetDirectories(String, SearchOption)
  nameWithType: FolderObject.GetDirectories(String, SearchOption)
  fullName: DotNetHelper_IO.FolderObject.GetDirectories(System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: GetDirectories
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 139
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public IEnumerable<FolderObject> GetDirectories(string searchPattern, SearchOption searchOption)
    parameters:
    - id: searchPattern
      type: System.String
    - id: searchOption
      type: System.IO.SearchOption
    return:
      type: System.Collections.Generic.IEnumerable{DotNetHelper_IO.FolderObject}
    content.vb: Public Function GetDirectories(searchPattern As String, searchOption As SearchOption) As IEnumerable(Of FolderObject)
  overload: DotNetHelper_IO.FolderObject.GetDirectories*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.GetFiles(System.String,System.IO.SearchOption)
  commentId: M:DotNetHelper_IO.FolderObject.GetFiles(System.String,System.IO.SearchOption)
  id: GetFiles(System.String,System.IO.SearchOption)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: GetFiles(String, SearchOption)
  nameWithType: FolderObject.GetFiles(String, SearchOption)
  fullName: DotNetHelper_IO.FolderObject.GetFiles(System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: GetFiles
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 146
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public IEnumerable<FileObject> GetFiles(string searchPattern, SearchOption searchOption)
    parameters:
    - id: searchPattern
      type: System.String
    - id: searchOption
      type: System.IO.SearchOption
    return:
      type: System.Collections.Generic.IEnumerable{DotNetHelper_IO.FileObject}
    content.vb: Public Function GetFiles(searchPattern As String, searchOption As SearchOption) As IEnumerable(Of FileObject)
  overload: DotNetHelper_IO.FolderObject.GetFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.Create(DotNetHelper_IO.Enum.FolderOption)
  commentId: M:DotNetHelper_IO.FolderObject.Create(DotNetHelper_IO.Enum.FolderOption)
  id: Create(DotNetHelper_IO.Enum.FolderOption)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: Create(FolderOption)
  nameWithType: FolderObject.Create(FolderOption)
  fullName: DotNetHelper_IO.FolderObject.Create(DotNetHelper_IO.Enum.FolderOption)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Create
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 167
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: >
    Creates all directories and subdirectories in the path for this FolderObject unless they already exist.

    if Folder.Option
  example: []
  syntax:
    content: public void Create(FolderOption folderOption)
    parameters:
    - id: folderOption
      type: DotNetHelper_IO.Enum.FolderOption
    content.vb: Public Sub Create(folderOption As FolderOption)
  overload: DotNetHelper_IO.FolderObject.Create*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The directory specified is a file.-or-The network name is not known.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'The caller does not have the required permission. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: 'The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. '
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: 'The specified path is invalid (for example, it is on an unmapped drive). '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.Delete(System.Boolean,System.Boolean)
  commentId: M:DotNetHelper_IO.FolderObject.Delete(System.Boolean,System.Boolean)
  id: Delete(System.Boolean,System.Boolean)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: Delete(Boolean, Boolean)
  nameWithType: FolderObject.Delete(Boolean, Boolean)
  fullName: DotNetHelper_IO.FolderObject.Delete(System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Delete
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 198
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public void Delete(bool recursive, bool dispose = true)
    parameters:
    - id: recursive
      type: System.Boolean
    - id: dispose
      type: System.Boolean
    content.vb: Public Sub Delete(recursive As Boolean, dispose As Boolean = True)
  overload: DotNetHelper_IO.FolderObject.Delete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.CopyContentsTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  commentId: M:DotNetHelper_IO.FolderObject.CopyContentsTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  id: CopyContentsTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: CopyContentsTo(String, FolderOption)
  nameWithType: FolderObject.CopyContentsTo(String, FolderOption)
  fullName: DotNetHelper_IO.FolderObject.CopyContentsTo(System.String, DotNetHelper_IO.Enum.FolderOption)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: CopyContentsTo
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 264
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nCopies to.\n"
  example: []
  syntax:
    content: public void CopyContentsTo(string location, FolderOption folderOption)
    parameters:
    - id: location
      type: System.String
      description: The location.
    - id: folderOption
      type: DotNetHelper_IO.Enum.FolderOption
      description: ''
    content.vb: Public Sub CopyContentsTo(location As String, folderOption As FolderOption)
  overload: DotNetHelper_IO.FolderObject.CopyContentsTo*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.CopyTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  commentId: M:DotNetHelper_IO.FolderObject.CopyTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  id: CopyTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: CopyTo(String, FolderOption)
  nameWithType: FolderObject.CopyTo(String, FolderOption)
  fullName: DotNetHelper_IO.FolderObject.CopyTo(System.String, DotNetHelper_IO.Enum.FolderOption)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: CopyTo
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 280
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nCopies to.\n"
  example: []
  syntax:
    content: public void CopyTo(string location, FolderOption folderOption)
    parameters:
    - id: location
      type: System.String
      description: The location.
    - id: folderOption
      type: DotNetHelper_IO.Enum.FolderOption
      description: ''
    content.vb: Public Sub CopyTo(location As String, folderOption As FolderOption)
  overload: DotNetHelper_IO.FolderObject.CopyTo*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.MoveTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  commentId: M:DotNetHelper_IO.FolderObject.MoveTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  id: MoveTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: MoveTo(String, FolderOption)
  nameWithType: FolderObject.MoveTo(String, FolderOption)
  fullName: DotNetHelper_IO.FolderObject.MoveTo(System.String, DotNetHelper_IO.Enum.FolderOption)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: MoveTo
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 343
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nMoves to.\n"
  example: []
  syntax:
    content: public void MoveTo(string location, FolderOption folderOption)
    parameters:
    - id: location
      type: System.String
      description: The location.
    - id: folderOption
      type: DotNetHelper_IO.Enum.FolderOption
      description: ''
    content.vb: Public Sub MoveTo(location As String, folderOption As FolderOption)
  overload: DotNetHelper_IO.FolderObject.MoveTo*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.MoveContentsTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  commentId: M:DotNetHelper_IO.FolderObject.MoveContentsTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  id: MoveContentsTo(System.String,DotNetHelper_IO.Enum.FolderOption)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: MoveContentsTo(String, FolderOption)
  nameWithType: FolderObject.MoveContentsTo(String, FolderOption)
  fullName: DotNetHelper_IO.FolderObject.MoveContentsTo(System.String, DotNetHelper_IO.Enum.FolderOption)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: MoveContentsTo
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 356
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nMoves to.\n"
  example: []
  syntax:
    content: public void MoveContentsTo(string location, FolderOption folderOption)
    parameters:
    - id: location
      type: System.String
      description: The location.
    - id: folderOption
      type: DotNetHelper_IO.Enum.FolderOption
      description: ''
    content.vb: Public Sub MoveContentsTo(location As String, folderOption As FolderOption)
  overload: DotNetHelper_IO.FolderObject.MoveContentsTo*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.ZipFolderToFileSystem(SharpCompress.Common.ArchiveType)
  commentId: M:DotNetHelper_IO.FolderObject.ZipFolderToFileSystem(SharpCompress.Common.ArchiveType)
  id: ZipFolderToFileSystem(SharpCompress.Common.ArchiveType)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: ZipFolderToFileSystem(ArchiveType)
  nameWithType: FolderObject.ZipFolderToFileSystem(ArchiveType)
  fullName: DotNetHelper_IO.FolderObject.ZipFolderToFileSystem(SharpCompress.Common.ArchiveType)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: ZipFolderToFileSystem
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 366
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nZips the folder to file system in this parent folder.\n"
  example: []
  syntax:
    content: public ZipFileObject ZipFolderToFileSystem(ArchiveType archiveType)
    parameters:
    - id: archiveType
      type: SharpCompress.Common.ArchiveType
      description: Type of the archive.
    return:
      type: DotNetHelper_IO.ZipFileObject
    content.vb: Public Function ZipFolderToFileSystem(archiveType As ArchiveType) As ZipFileObject
  overload: DotNetHelper_IO.FolderObject.ZipFolderToFileSystem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.ZipFolderToFileSystem(System.String,SharpCompress.Common.ArchiveType,SharpCompress.Writers.WriterOptions,System.String,System.IO.SearchOption)
  commentId: M:DotNetHelper_IO.FolderObject.ZipFolderToFileSystem(System.String,SharpCompress.Common.ArchiveType,SharpCompress.Writers.WriterOptions,System.String,System.IO.SearchOption)
  id: ZipFolderToFileSystem(System.String,SharpCompress.Common.ArchiveType,SharpCompress.Writers.WriterOptions,System.String,System.IO.SearchOption)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: ZipFolderToFileSystem(String, ArchiveType, WriterOptions, String, SearchOption)
  nameWithType: FolderObject.ZipFolderToFileSystem(String, ArchiveType, WriterOptions, String, SearchOption)
  fullName: DotNetHelper_IO.FolderObject.ZipFolderToFileSystem(System.String, SharpCompress.Common.ArchiveType, SharpCompress.Writers.WriterOptions, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: ZipFolderToFileSystem
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 382
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nZips the folder to file system.\n"
  example: []
  syntax:
    content: public ZipFileObject ZipFolderToFileSystem(string fullPathToZipFile, ArchiveType archiveType, WriterOptions writerOptions = null, string searchPattern = "*", SearchOption searchOption = SearchOption.AllDirectories)
    parameters:
    - id: fullPathToZipFile
      type: System.String
      description: ''
    - id: archiveType
      type: SharpCompress.Common.ArchiveType
      description: Type of the archive.
    - id: writerOptions
      type: SharpCompress.Writers.WriterOptions
      description: ''
    - id: searchPattern
      type: System.String
      description: ''
    - id: searchOption
      type: System.IO.SearchOption
      description: ''
    return:
      type: DotNetHelper_IO.ZipFileObject
    content.vb: Public Function ZipFolderToFileSystem(fullPathToZipFile As String, archiveType As ArchiveType, writerOptions As WriterOptions = Nothing, searchPattern As String = "*", searchOption As SearchOption = SearchOption.AllDirectories) As ZipFileObject
  overload: DotNetHelper_IO.FolderObject.ZipFolderToFileSystem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.ZipFolderToMemory
  commentId: M:DotNetHelper_IO.FolderObject.ZipFolderToMemory
  id: ZipFolderToMemory
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: ZipFolderToMemory()
  nameWithType: FolderObject.ZipFolderToMemory()
  fullName: DotNetHelper_IO.FolderObject.ZipFolderToMemory()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: ZipFolderToMemory
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 396
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nZips the folder to memory.\n"
  example: []
  syntax:
    content: public MemoryStream ZipFolderToMemory()
    return:
      type: System.IO.MemoryStream
      description: MemoryStream.
    content.vb: Public Function ZipFolderToMemory As MemoryStream
  overload: DotNetHelper_IO.FolderObject.ZipFolderToMemory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.AddFile(System.String,System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  commentId: M:DotNetHelper_IO.FolderObject.AddFile(System.String,System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  id: AddFile(System.String,System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: AddFile(String, String, FileOption, Encoding, Int32)
  nameWithType: FolderObject.AddFile(String, String, FileOption, Encoding, Int32)
  fullName: DotNetHelper_IO.FolderObject.AddFile(System.String, System.String, DotNetHelper_IO.Enum.FileOption, System.Text.Encoding, System.Int32)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: AddFile
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 456
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public FileObject AddFile(string relativeFileName, string fileContent, FileOption fileOption, Encoding encoding = null, int bufferSize = 4096)
    parameters:
    - id: relativeFileName
      type: System.String
    - id: fileContent
      type: System.String
    - id: fileOption
      type: DotNetHelper_IO.Enum.FileOption
    - id: encoding
      type: System.Text.Encoding
    - id: bufferSize
      type: System.Int32
    return:
      type: DotNetHelper_IO.FileObject
    content.vb: Public Function AddFile(relativeFileName As String, fileContent As String, fileOption As FileOption, encoding As Encoding = Nothing, bufferSize As Integer = 4096) As FileObject
  overload: DotNetHelper_IO.FolderObject.AddFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.AddFile(System.String,System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
  commentId: M:DotNetHelper_IO.FolderObject.AddFile(System.String,System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
  id: AddFile(System.String,System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: AddFile(String, Byte[], FileOption, Int32, Nullable<Int32>)
  nameWithType: FolderObject.AddFile(String, Byte[], FileOption, Int32, Nullable<Int32>)
  fullName: DotNetHelper_IO.FolderObject.AddFile(System.String, System.Byte[], DotNetHelper_IO.Enum.FileOption, System.Int32, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: AddFile
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 464
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public FileObject AddFile(string relativeFileName, byte[] fileContent, FileOption fileOption, int offset = 0, int? count = default(int? ))
    parameters:
    - id: relativeFileName
      type: System.String
    - id: fileContent
      type: System.Byte[]
    - id: fileOption
      type: DotNetHelper_IO.Enum.FileOption
    - id: offset
      type: System.Int32
    - id: count
      type: System.Nullable{System.Int32}
    return:
      type: DotNetHelper_IO.FileObject
    content.vb: Public Function AddFile(relativeFileName As String, fileContent As Byte(), fileOption As FileOption, offset As Integer = 0, count As Integer? = Nothing) As FileObject
  overload: DotNetHelper_IO.FolderObject.AddFile*
  nameWithType.vb: FolderObject.AddFile(String, Byte(), FileOption, Int32, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_IO.FolderObject.AddFile(System.String, System.Byte(), DotNetHelper_IO.Enum.FileOption, System.Int32, System.Nullable(Of System.Int32))
  name.vb: AddFile(String, Byte(), FileOption, Int32, Nullable(Of Int32))
- uid: DotNetHelper_IO.FolderObject.AddFile(System.String,System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
  commentId: M:DotNetHelper_IO.FolderObject.AddFile(System.String,System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
  id: AddFile(System.String,System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: AddFile(String, Stream, FileOption, Int32)
  nameWithType: FolderObject.AddFile(String, Stream, FileOption, Int32)
  fullName: DotNetHelper_IO.FolderObject.AddFile(System.String, System.IO.Stream, DotNetHelper_IO.Enum.FileOption, System.Int32)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: AddFile
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 472
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public FileObject AddFile(string relativeFileName, Stream fileContent, FileOption fileOption, int bufferSize)
    parameters:
    - id: relativeFileName
      type: System.String
    - id: fileContent
      type: System.IO.Stream
    - id: fileOption
      type: DotNetHelper_IO.Enum.FileOption
    - id: bufferSize
      type: System.Int32
    return:
      type: DotNetHelper_IO.FileObject
    content.vb: Public Function AddFile(relativeFileName As String, fileContent As Stream, fileOption As FileOption, bufferSize As Integer) As FileObject
  overload: DotNetHelper_IO.FolderObject.AddFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.AddFolder(System.String)
  commentId: M:DotNetHelper_IO.FolderObject.AddFolder(System.String)
  id: AddFolder(System.String)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: AddFolder(String)
  nameWithType: FolderObject.AddFolder(String)
  fullName: DotNetHelper_IO.FolderObject.AddFolder(System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: AddFolder
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 479
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public FolderObject AddFolder(string relativeFolderPath)
    parameters:
    - id: relativeFolderPath
      type: System.String
    return:
      type: DotNetHelper_IO.FolderObject
    content.vb: Public Function AddFolder(relativeFolderPath As String) As FolderObject
  overload: DotNetHelper_IO.FolderObject.AddFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.AddFileAsync(System.String,System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  commentId: M:DotNetHelper_IO.FolderObject.AddFileAsync(System.String,System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  id: AddFileAsync(System.String,System.String,DotNetHelper_IO.Enum.FileOption,System.Text.Encoding,System.Int32)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: AddFileAsync(String, String, FileOption, Encoding, Int32)
  nameWithType: FolderObject.AddFileAsync(String, String, FileOption, Encoding, Int32)
  fullName: DotNetHelper_IO.FolderObject.AddFileAsync(System.String, System.String, DotNetHelper_IO.Enum.FileOption, System.Text.Encoding, System.Int32)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: AddFileAsync
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 487
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public Task<FileObject> AddFileAsync(string relativeFileName, string fileContent, FileOption fileOption, Encoding encoding = null, int bufferSize = 4096)
    parameters:
    - id: relativeFileName
      type: System.String
    - id: fileContent
      type: System.String
    - id: fileOption
      type: DotNetHelper_IO.Enum.FileOption
    - id: encoding
      type: System.Text.Encoding
    - id: bufferSize
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{DotNetHelper_IO.FileObject}
    content.vb: Public Function AddFileAsync(relativeFileName As String, fileContent As String, fileOption As FileOption, encoding As Encoding = Nothing, bufferSize As Integer = 4096) As Task(Of FileObject)
  overload: DotNetHelper_IO.FolderObject.AddFileAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.AddFileAsync(System.String,System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
  commentId: M:DotNetHelper_IO.FolderObject.AddFileAsync(System.String,System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
  id: AddFileAsync(System.String,System.Byte[],DotNetHelper_IO.Enum.FileOption,System.Int32,System.Nullable{System.Int32})
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: AddFileAsync(String, Byte[], FileOption, Int32, Nullable<Int32>)
  nameWithType: FolderObject.AddFileAsync(String, Byte[], FileOption, Int32, Nullable<Int32>)
  fullName: DotNetHelper_IO.FolderObject.AddFileAsync(System.String, System.Byte[], DotNetHelper_IO.Enum.FileOption, System.Int32, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: AddFileAsync
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 495
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public Task<FileObject> AddFileAsync(string relativeFileName, byte[] fileContent, FileOption fileOption, int offset = 0, int? count = default(int? ))
    parameters:
    - id: relativeFileName
      type: System.String
    - id: fileContent
      type: System.Byte[]
    - id: fileOption
      type: DotNetHelper_IO.Enum.FileOption
    - id: offset
      type: System.Int32
    - id: count
      type: System.Nullable{System.Int32}
    return:
      type: System.Threading.Tasks.Task{DotNetHelper_IO.FileObject}
    content.vb: Public Function AddFileAsync(relativeFileName As String, fileContent As Byte(), fileOption As FileOption, offset As Integer = 0, count As Integer? = Nothing) As Task(Of FileObject)
  overload: DotNetHelper_IO.FolderObject.AddFileAsync*
  nameWithType.vb: FolderObject.AddFileAsync(String, Byte(), FileOption, Int32, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_IO.FolderObject.AddFileAsync(System.String, System.Byte(), DotNetHelper_IO.Enum.FileOption, System.Int32, System.Nullable(Of System.Int32))
  name.vb: AddFileAsync(String, Byte(), FileOption, Int32, Nullable(Of Int32))
- uid: DotNetHelper_IO.FolderObject.AddFileAsync(System.String,System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
  commentId: M:DotNetHelper_IO.FolderObject.AddFileAsync(System.String,System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
  id: AddFileAsync(System.String,System.IO.Stream,DotNetHelper_IO.Enum.FileOption,System.Int32)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: AddFileAsync(String, Stream, FileOption, Int32)
  nameWithType: FolderObject.AddFileAsync(String, Stream, FileOption, Int32)
  fullName: DotNetHelper_IO.FolderObject.AddFileAsync(System.String, System.IO.Stream, DotNetHelper_IO.Enum.FileOption, System.Int32)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: AddFileAsync
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 503
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public Task<FileObject> AddFileAsync(string relativeFileName, Stream fileContent, FileOption fileOption, int bufferSize)
    parameters:
    - id: relativeFileName
      type: System.String
    - id: fileContent
      type: System.IO.Stream
    - id: fileOption
      type: DotNetHelper_IO.Enum.FileOption
    - id: bufferSize
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{DotNetHelper_IO.FileObject}
    content.vb: Public Function AddFileAsync(relativeFileName As String, fileContent As Stream, fileOption As FileOption, bufferSize As Integer) As Task(Of FileObject)
  overload: DotNetHelper_IO.FolderObject.AddFileAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.StartWatching(System.IO.WatcherChangeTypes,System.Boolean)
  commentId: M:DotNetHelper_IO.FolderObject.StartWatching(System.IO.WatcherChangeTypes,System.Boolean)
  id: StartWatching(System.IO.WatcherChangeTypes,System.Boolean)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: StartWatching(WatcherChangeTypes, Boolean)
  nameWithType: FolderObject.StartWatching(WatcherChangeTypes, Boolean)
  fullName: DotNetHelper_IO.FolderObject.StartWatching(System.IO.WatcherChangeTypes, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: StartWatching
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 530
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nA synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time\n(in milliseconds) to wait before timing out.\n"
  example: []
  syntax:
    content: public void StartWatching(WatcherChangeTypes changeTypes = WatcherChangeTypes.Created | WatcherChangeTypes.Deleted | WatcherChangeTypes.Changed | WatcherChangeTypes.Renamed | WatcherChangeTypes.All, bool onNewThread = true)
    parameters:
    - id: changeTypes
      type: System.IO.WatcherChangeTypes
      description: The change types.
    - id: onNewThread
      type: System.Boolean
      description: if set to <code>true</code> [on new thread].
    content.vb: Public Sub StartWatching(changeTypes As WatcherChangeTypes = WatcherChangeTypes.Created Or WatcherChangeTypes.Deleted Or WatcherChangeTypes.Changed Or WatcherChangeTypes.Renamed Or WatcherChangeTypes.All, onNewThread As Boolean = True)
  overload: DotNetHelper_IO.FolderObject.StartWatching*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.StopWatching
  commentId: M:DotNetHelper_IO.FolderObject.StopWatching
  id: StopWatching
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: StopWatching()
  nameWithType: FolderObject.StopWatching()
  fullName: DotNetHelper_IO.FolderObject.StopWatching()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: StopWatching
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 558
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  summary: "\nStops the watching.\n"
  example: []
  syntax:
    content: public void StopWatching()
    content.vb: Public Sub StopWatching
  overload: DotNetHelper_IO.FolderObject.StopWatching*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.Dispose
  commentId: M:DotNetHelper_IO.FolderObject.Dispose
  id: Dispose
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: FolderObject.Dispose()
  fullName: DotNetHelper_IO.FolderObject.Dispose()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Dispose
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 576
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: DotNetHelper_IO.FolderObject.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_IO.FolderObject.Dispose(System.Boolean)
  commentId: M:DotNetHelper_IO.FolderObject.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: FolderObject.Dispose(Boolean)
  fullName: DotNetHelper_IO.FolderObject.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: Dispose
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 583
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: DotNetHelper_IO.FolderObject.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: DotNetHelper_IO.FolderObject.GetSize
  commentId: M:DotNetHelper_IO.FolderObject.GetSize
  id: GetSize
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: GetSize()
  nameWithType: FolderObject.GetSize()
  fullName: DotNetHelper_IO.FolderObject.GetSize()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: GetSize
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 614
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public override string GetSize()
    return:
      type: System.String
    content.vb: Public Overrides Function GetSize As String
  overridden: DotNetHelper_IO.PathObject.GetSize
  overload: DotNetHelper_IO.FolderObject.GetSize*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: DotNetHelper_IO.FolderObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  commentId: M:DotNetHelper_IO.FolderObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  id: GetSize(DotNetHelper_IO.Enum.SizeUnits)
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: GetSize(SizeUnits)
  nameWithType: FolderObject.GetSize(SizeUnits)
  fullName: DotNetHelper_IO.FolderObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: GetSize
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 619
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public override long? GetSize(SizeUnits sizeUnits)
    parameters:
    - id: sizeUnits
      type: DotNetHelper_IO.Enum.SizeUnits
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Overrides Function GetSize(sizeUnits As SizeUnits) As Long?
  overridden: DotNetHelper_IO.PathObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  overload: DotNetHelper_IO.FolderObject.GetSize*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: DotNetHelper_IO.FolderObject.GetParentFolder
  commentId: M:DotNetHelper_IO.FolderObject.GetParentFolder
  id: GetParentFolder
  parent: DotNetHelper_IO.FolderObject
  langs:
  - csharp
  - vb
  name: GetParentFolder()
  nameWithType: FolderObject.GetParentFolder()
  fullName: DotNetHelper_IO.FolderObject.GetParentFolder()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-IO/FolderObject.cs
      branch: master
      repo: git@github.com:TheMofaDe/DotNetHelper-IO.git
    id: GetParentFolder
    path: ../src/DotNetHelper-IO/FolderObject.cs
    startLine: 624
  assemblies:
  - DotNetHelper-IO
  namespace: DotNetHelper_IO
  syntax:
    content: public override FolderObject GetParentFolder()
    return:
      type: DotNetHelper_IO.FolderObject
    content.vb: Public Overrides Function GetParentFolder As FolderObject
  overridden: DotNetHelper_IO.PathObject.GetParentFolder
  overload: DotNetHelper_IO.FolderObject.GetParentFolder*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: DotNetHelper_IO
  commentId: N:DotNetHelper_IO
  name: DotNetHelper_IO
  nameWithType: DotNetHelper_IO
  fullName: DotNetHelper_IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetHelper_IO.PathObject
  commentId: T:DotNetHelper_IO.PathObject
  parent: DotNetHelper_IO
  name: PathObject
  nameWithType: PathObject
  fullName: DotNetHelper_IO.PathObject
- uid: DotNetHelper_IO.PathObject.FullName
  commentId: P:DotNetHelper_IO.PathObject.FullName
  parent: DotNetHelper_IO.PathObject
  name: FullName
  nameWithType: PathObject.FullName
  fullName: DotNetHelper_IO.PathObject.FullName
- uid: DotNetHelper_IO.PathObject.PathType
  commentId: P:DotNetHelper_IO.PathObject.PathType
  parent: DotNetHelper_IO.PathObject
  name: PathType
  nameWithType: PathObject.PathType
  fullName: DotNetHelper_IO.PathObject.PathType
- uid: DotNetHelper_IO.PathObject.SizeInBytes
  commentId: P:DotNetHelper_IO.PathObject.SizeInBytes
  parent: DotNetHelper_IO.PathObject
  name: SizeInBytes
  nameWithType: PathObject.SizeInBytes
  fullName: DotNetHelper_IO.PathObject.SizeInBytes
- uid: DotNetHelper_IO.PathObject.Size
  commentId: P:DotNetHelper_IO.PathObject.Size
  parent: DotNetHelper_IO.PathObject
  name: Size
  nameWithType: PathObject.Size
  fullName: DotNetHelper_IO.PathObject.Size
- uid: DotNetHelper_IO.PathObject.Exist
  commentId: P:DotNetHelper_IO.PathObject.Exist
  parent: DotNetHelper_IO.PathObject
  name: Exist
  nameWithType: PathObject.Exist
  fullName: DotNetHelper_IO.PathObject.Exist
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper_IO.FolderObject.DirectoryInfo*
  commentId: Overload:DotNetHelper_IO.FolderObject.DirectoryInfo
  name: DirectoryInfo
  nameWithType: FolderObject.DirectoryInfo
  fullName: DotNetHelper_IO.FolderObject.DirectoryInfo
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: DotNetHelper_IO.FolderObject.Watcher*
  commentId: Overload:DotNetHelper_IO.FolderObject.Watcher
  name: Watcher
  nameWithType: FolderObject.Watcher
  fullName: DotNetHelper_IO.FolderObject.Watcher
- uid: System.IO.FileSystemWatcher
  commentId: T:System.IO.FileSystemWatcher
  parent: System.IO
  isExternal: true
  name: FileSystemWatcher
  nameWithType: FileSystemWatcher
  fullName: System.IO.FileSystemWatcher
- uid: DotNetHelper_IO.FolderObject.WatchTimeout*
  commentId: Overload:DotNetHelper_IO.FolderObject.WatchTimeout
  name: WatchTimeout
  nameWithType: FolderObject.WatchTimeout
  fullName: DotNetHelper_IO.FolderObject.WatchTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DotNetHelper_IO.FolderObject.NotifyFilters*
  commentId: Overload:DotNetHelper_IO.FolderObject.NotifyFilters
  name: NotifyFilters
  nameWithType: FolderObject.NotifyFilters
  fullName: DotNetHelper_IO.FolderObject.NotifyFilters
- uid: System.IO.NotifyFilters
  commentId: T:System.IO.NotifyFilters
  parent: System.IO
  isExternal: true
  name: NotifyFilters
  nameWithType: NotifyFilters
  fullName: System.IO.NotifyFilters
- uid: DotNetHelper_IO.PathObject.Name
  commentId: P:DotNetHelper_IO.PathObject.Name
  parent: DotNetHelper_IO.PathObject
  name: Name
  nameWithType: PathObject.Name
  fullName: DotNetHelper_IO.PathObject.Name
- uid: DotNetHelper_IO.FolderObject.Name*
  commentId: Overload:DotNetHelper_IO.FolderObject.Name
  name: Name
  nameWithType: FolderObject.Name
  fullName: DotNetHelper_IO.FolderObject.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DotNetHelper_IO.PathObject.LastWriteTime
  commentId: P:DotNetHelper_IO.PathObject.LastWriteTime
  parent: DotNetHelper_IO.PathObject
  name: LastWriteTime
  nameWithType: PathObject.LastWriteTime
  fullName: DotNetHelper_IO.PathObject.LastWriteTime
- uid: DotNetHelper_IO.FolderObject.LastWriteTime*
  commentId: Overload:DotNetHelper_IO.FolderObject.LastWriteTime
  name: LastWriteTime
  nameWithType: FolderObject.LastWriteTime
  fullName: DotNetHelper_IO.FolderObject.LastWriteTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.PathObject.LastWriteTimeUtc
  commentId: P:DotNetHelper_IO.PathObject.LastWriteTimeUtc
  parent: DotNetHelper_IO.PathObject
  name: LastWriteTimeUtc
  nameWithType: PathObject.LastWriteTimeUtc
  fullName: DotNetHelper_IO.PathObject.LastWriteTimeUtc
- uid: DotNetHelper_IO.FolderObject.LastWriteTimeUtc*
  commentId: Overload:DotNetHelper_IO.FolderObject.LastWriteTimeUtc
  name: LastWriteTimeUtc
  nameWithType: FolderObject.LastWriteTimeUtc
  fullName: DotNetHelper_IO.FolderObject.LastWriteTimeUtc
- uid: DotNetHelper_IO.PathObject.CreationTimeUtc
  commentId: P:DotNetHelper_IO.PathObject.CreationTimeUtc
  parent: DotNetHelper_IO.PathObject
  name: CreationTimeUtc
  nameWithType: PathObject.CreationTimeUtc
  fullName: DotNetHelper_IO.PathObject.CreationTimeUtc
- uid: DotNetHelper_IO.FolderObject.CreationTimeUtc*
  commentId: Overload:DotNetHelper_IO.FolderObject.CreationTimeUtc
  name: CreationTimeUtc
  nameWithType: FolderObject.CreationTimeUtc
  fullName: DotNetHelper_IO.FolderObject.CreationTimeUtc
- uid: DotNetHelper_IO.PathObject.CreationTime
  commentId: P:DotNetHelper_IO.PathObject.CreationTime
  parent: DotNetHelper_IO.PathObject
  name: CreationTime
  nameWithType: PathObject.CreationTime
  fullName: DotNetHelper_IO.PathObject.CreationTime
- uid: DotNetHelper_IO.FolderObject.CreationTime*
  commentId: Overload:DotNetHelper_IO.FolderObject.CreationTime
  name: CreationTime
  nameWithType: FolderObject.CreationTime
  fullName: DotNetHelper_IO.FolderObject.CreationTime
- uid: DotNetHelper_IO.PathObject.LastAccessTimeUtc
  commentId: P:DotNetHelper_IO.PathObject.LastAccessTimeUtc
  parent: DotNetHelper_IO.PathObject
  name: LastAccessTimeUtc
  nameWithType: PathObject.LastAccessTimeUtc
  fullName: DotNetHelper_IO.PathObject.LastAccessTimeUtc
- uid: DotNetHelper_IO.FolderObject.LastAccessTimeUtc*
  commentId: Overload:DotNetHelper_IO.FolderObject.LastAccessTimeUtc
  name: LastAccessTimeUtc
  nameWithType: FolderObject.LastAccessTimeUtc
  fullName: DotNetHelper_IO.FolderObject.LastAccessTimeUtc
- uid: DotNetHelper_IO.PathObject.LastAccessTime
  commentId: P:DotNetHelper_IO.PathObject.LastAccessTime
  parent: DotNetHelper_IO.PathObject
  name: LastAccessTime
  nameWithType: PathObject.LastAccessTime
  fullName: DotNetHelper_IO.PathObject.LastAccessTime
- uid: DotNetHelper_IO.FolderObject.LastAccessTime*
  commentId: Overload:DotNetHelper_IO.FolderObject.LastAccessTime
  name: LastAccessTime
  nameWithType: FolderObject.LastAccessTime
  fullName: DotNetHelper_IO.FolderObject.LastAccessTime
- uid: DotNetHelper_IO.FolderObject
  commentId: T:DotNetHelper_IO.FolderObject
  parent: DotNetHelper_IO
  name: FolderObject
  nameWithType: FolderObject
  fullName: DotNetHelper_IO.FolderObject
- uid: DotNetHelper_IO.FolderObject.#ctor*
  commentId: Overload:DotNetHelper_IO.FolderObject.#ctor
  name: FolderObject
  nameWithType: FolderObject.FolderObject
  fullName: DotNetHelper_IO.FolderObject.FolderObject
- uid: DotNetHelper_IO.FolderObject.RefreshObject*
  commentId: Overload:DotNetHelper_IO.FolderObject.RefreshObject
  name: RefreshObject
  nameWithType: FolderObject.RefreshObject
  fullName: DotNetHelper_IO.FolderObject.RefreshObject
- uid: DotNetHelper_IO.FolderObject.GetDirectories*
  commentId: Overload:DotNetHelper_IO.FolderObject.GetDirectories
  name: GetDirectories
  nameWithType: FolderObject.GetDirectories
  fullName: DotNetHelper_IO.FolderObject.GetDirectories
- uid: System.IO.SearchOption
  commentId: T:System.IO.SearchOption
  parent: System.IO
  isExternal: true
  name: SearchOption
  nameWithType: SearchOption
  fullName: System.IO.SearchOption
- uid: System.Collections.Generic.IEnumerable{DotNetHelper_IO.FolderObject}
  commentId: T:System.Collections.Generic.IEnumerable{DotNetHelper_IO.FolderObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FolderObject>
  nameWithType: IEnumerable<FolderObject>
  fullName: System.Collections.Generic.IEnumerable<DotNetHelper_IO.FolderObject>
  nameWithType.vb: IEnumerable(Of FolderObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of DotNetHelper_IO.FolderObject)
  name.vb: IEnumerable(Of FolderObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_IO.FolderObject
    name: FolderObject
    nameWithType: FolderObject
    fullName: DotNetHelper_IO.FolderObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_IO.FolderObject
    name: FolderObject
    nameWithType: FolderObject
    fullName: DotNetHelper_IO.FolderObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DotNetHelper_IO.FolderObject.GetFiles*
  commentId: Overload:DotNetHelper_IO.FolderObject.GetFiles
  name: GetFiles
  nameWithType: FolderObject.GetFiles
  fullName: DotNetHelper_IO.FolderObject.GetFiles
- uid: System.Collections.Generic.IEnumerable{DotNetHelper_IO.FileObject}
  commentId: T:System.Collections.Generic.IEnumerable{DotNetHelper_IO.FileObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FileObject>
  nameWithType: IEnumerable<FileObject>
  fullName: System.Collections.Generic.IEnumerable<DotNetHelper_IO.FileObject>
  nameWithType.vb: IEnumerable(Of FileObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of DotNetHelper_IO.FileObject)
  name.vb: IEnumerable(Of FileObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_IO.FileObject
    name: FileObject
    nameWithType: FileObject
    fullName: DotNetHelper_IO.FileObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_IO.FileObject
    name: FileObject
    nameWithType: FileObject
    fullName: DotNetHelper_IO.FileObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  isExternal: true
- uid: System.UnauthorizedAccessException
  commentId: T:System.UnauthorizedAccessException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.IO.PathTooLongException
  commentId: T:System.IO.PathTooLongException
  isExternal: true
- uid: System.IO.DirectoryNotFoundException
  commentId: T:System.IO.DirectoryNotFoundException
  isExternal: true
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: DotNetHelper_IO.FolderObject.Create*
  commentId: Overload:DotNetHelper_IO.FolderObject.Create
  name: Create
  nameWithType: FolderObject.Create
  fullName: DotNetHelper_IO.FolderObject.Create
- uid: DotNetHelper_IO.Enum.FolderOption
  commentId: T:DotNetHelper_IO.Enum.FolderOption
  parent: DotNetHelper_IO.Enum
  name: FolderOption
  nameWithType: FolderOption
  fullName: DotNetHelper_IO.Enum.FolderOption
- uid: DotNetHelper_IO.Enum
  commentId: N:DotNetHelper_IO.Enum
  name: DotNetHelper_IO.Enum
  nameWithType: DotNetHelper_IO.Enum
  fullName: DotNetHelper_IO.Enum
- uid: DotNetHelper_IO.FolderObject.Delete*
  commentId: Overload:DotNetHelper_IO.FolderObject.Delete
  name: Delete
  nameWithType: FolderObject.Delete
  fullName: DotNetHelper_IO.FolderObject.Delete
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  commentId: T:System.Exception
  isExternal: true
- uid: DotNetHelper_IO.FolderObject.CopyContentsTo*
  commentId: Overload:DotNetHelper_IO.FolderObject.CopyContentsTo
  name: CopyContentsTo
  nameWithType: FolderObject.CopyContentsTo
  fullName: DotNetHelper_IO.FolderObject.CopyContentsTo
- uid: DotNetHelper_IO.FolderObject.CopyTo*
  commentId: Overload:DotNetHelper_IO.FolderObject.CopyTo
  name: CopyTo
  nameWithType: FolderObject.CopyTo
  fullName: DotNetHelper_IO.FolderObject.CopyTo
- uid: DotNetHelper_IO.FolderObject.MoveTo*
  commentId: Overload:DotNetHelper_IO.FolderObject.MoveTo
  name: MoveTo
  nameWithType: FolderObject.MoveTo
  fullName: DotNetHelper_IO.FolderObject.MoveTo
- uid: DotNetHelper_IO.FolderObject.MoveContentsTo*
  commentId: Overload:DotNetHelper_IO.FolderObject.MoveContentsTo
  name: MoveContentsTo
  nameWithType: FolderObject.MoveContentsTo
  fullName: DotNetHelper_IO.FolderObject.MoveContentsTo
- uid: DotNetHelper_IO.FolderObject.ZipFolderToFileSystem*
  commentId: Overload:DotNetHelper_IO.FolderObject.ZipFolderToFileSystem
  name: ZipFolderToFileSystem
  nameWithType: FolderObject.ZipFolderToFileSystem
  fullName: DotNetHelper_IO.FolderObject.ZipFolderToFileSystem
- uid: SharpCompress.Common.ArchiveType
  commentId: T:SharpCompress.Common.ArchiveType
  parent: SharpCompress.Common
  isExternal: true
  name: ArchiveType
  nameWithType: ArchiveType
  fullName: SharpCompress.Common.ArchiveType
- uid: DotNetHelper_IO.ZipFileObject
  commentId: T:DotNetHelper_IO.ZipFileObject
  parent: DotNetHelper_IO
  name: ZipFileObject
  nameWithType: ZipFileObject
  fullName: DotNetHelper_IO.ZipFileObject
- uid: SharpCompress.Common
  commentId: N:SharpCompress.Common
  isExternal: true
  name: SharpCompress.Common
  nameWithType: SharpCompress.Common
  fullName: SharpCompress.Common
- uid: SharpCompress.Writers.WriterOptions
  commentId: T:SharpCompress.Writers.WriterOptions
  parent: SharpCompress.Writers
  isExternal: true
  name: WriterOptions
  nameWithType: WriterOptions
  fullName: SharpCompress.Writers.WriterOptions
- uid: SharpCompress.Writers
  commentId: N:SharpCompress.Writers
  isExternal: true
  name: SharpCompress.Writers
  nameWithType: SharpCompress.Writers
  fullName: SharpCompress.Writers
- uid: DotNetHelper_IO.FolderObject.ZipFolderToMemory*
  commentId: Overload:DotNetHelper_IO.FolderObject.ZipFolderToMemory
  name: ZipFolderToMemory
  nameWithType: FolderObject.ZipFolderToMemory
  fullName: DotNetHelper_IO.FolderObject.ZipFolderToMemory
- uid: System.IO.MemoryStream
  commentId: T:System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: DotNetHelper_IO.FolderObject.AddFile*
  commentId: Overload:DotNetHelper_IO.FolderObject.AddFile
  name: AddFile
  nameWithType: FolderObject.AddFile
  fullName: DotNetHelper_IO.FolderObject.AddFile
- uid: DotNetHelper_IO.Enum.FileOption
  commentId: T:DotNetHelper_IO.Enum.FileOption
  parent: DotNetHelper_IO.Enum
  name: FileOption
  nameWithType: FileOption
  fullName: DotNetHelper_IO.Enum.FileOption
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: DotNetHelper_IO.FileObject
  commentId: T:DotNetHelper_IO.FileObject
  parent: DotNetHelper_IO
  name: FileObject
  nameWithType: FileObject
  fullName: DotNetHelper_IO.FileObject
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: DotNetHelper_IO.FolderObject.AddFolder*
  commentId: Overload:DotNetHelper_IO.FolderObject.AddFolder
  name: AddFolder
  nameWithType: FolderObject.AddFolder
  fullName: DotNetHelper_IO.FolderObject.AddFolder
- uid: DotNetHelper_IO.FolderObject.AddFileAsync*
  commentId: Overload:DotNetHelper_IO.FolderObject.AddFileAsync
  name: AddFileAsync
  nameWithType: FolderObject.AddFileAsync
  fullName: DotNetHelper_IO.FolderObject.AddFileAsync
- uid: System.Threading.Tasks.Task{DotNetHelper_IO.FileObject}
  commentId: T:System.Threading.Tasks.Task{DotNetHelper_IO.FileObject}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileObject>
  nameWithType: Task<FileObject>
  fullName: System.Threading.Tasks.Task<DotNetHelper_IO.FileObject>
  nameWithType.vb: Task(Of FileObject)
  fullName.vb: System.Threading.Tasks.Task(Of DotNetHelper_IO.FileObject)
  name.vb: Task(Of FileObject)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_IO.FileObject
    name: FileObject
    nameWithType: FileObject
    fullName: DotNetHelper_IO.FileObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_IO.FileObject
    name: FileObject
    nameWithType: FileObject
    fullName: DotNetHelper_IO.FileObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: DotNetHelper_IO.FolderObject.StartWatching*
  commentId: Overload:DotNetHelper_IO.FolderObject.StartWatching
  name: StartWatching
  nameWithType: FolderObject.StartWatching
  fullName: DotNetHelper_IO.FolderObject.StartWatching
- uid: System.IO.WatcherChangeTypes
  commentId: T:System.IO.WatcherChangeTypes
  parent: System.IO
  isExternal: true
  name: WatcherChangeTypes
  nameWithType: WatcherChangeTypes
  fullName: System.IO.WatcherChangeTypes
- uid: DotNetHelper_IO.FolderObject.StopWatching*
  commentId: Overload:DotNetHelper_IO.FolderObject.StopWatching
  name: StopWatching
  nameWithType: FolderObject.StopWatching
  fullName: DotNetHelper_IO.FolderObject.StopWatching
- uid: DotNetHelper_IO.FolderObject.Dispose*
  commentId: Overload:DotNetHelper_IO.FolderObject.Dispose
  name: Dispose
  nameWithType: FolderObject.Dispose
  fullName: DotNetHelper_IO.FolderObject.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.PathObject.GetSize
  commentId: M:DotNetHelper_IO.PathObject.GetSize
  parent: DotNetHelper_IO.PathObject
  name: GetSize()
  nameWithType: PathObject.GetSize()
  fullName: DotNetHelper_IO.PathObject.GetSize()
  spec.csharp:
  - uid: DotNetHelper_IO.PathObject.GetSize
    name: GetSize
    nameWithType: PathObject.GetSize
    fullName: DotNetHelper_IO.PathObject.GetSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.PathObject.GetSize
    name: GetSize
    nameWithType: PathObject.GetSize
    fullName: DotNetHelper_IO.PathObject.GetSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FolderObject.GetSize*
  commentId: Overload:DotNetHelper_IO.FolderObject.GetSize
  name: GetSize
  nameWithType: FolderObject.GetSize
  fullName: DotNetHelper_IO.FolderObject.GetSize
- uid: DotNetHelper_IO.PathObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  commentId: M:DotNetHelper_IO.PathObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  parent: DotNetHelper_IO.PathObject
  name: GetSize(SizeUnits)
  nameWithType: PathObject.GetSize(SizeUnits)
  fullName: DotNetHelper_IO.PathObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
  spec.csharp:
  - uid: DotNetHelper_IO.PathObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
    name: GetSize
    nameWithType: PathObject.GetSize
    fullName: DotNetHelper_IO.PathObject.GetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetHelper_IO.Enum.SizeUnits
    name: SizeUnits
    nameWithType: SizeUnits
    fullName: DotNetHelper_IO.Enum.SizeUnits
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.PathObject.GetSize(DotNetHelper_IO.Enum.SizeUnits)
    name: GetSize
    nameWithType: PathObject.GetSize
    fullName: DotNetHelper_IO.PathObject.GetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetHelper_IO.Enum.SizeUnits
    name: SizeUnits
    nameWithType: SizeUnits
    fullName: DotNetHelper_IO.Enum.SizeUnits
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.Enum.SizeUnits
  commentId: T:DotNetHelper_IO.Enum.SizeUnits
  parent: DotNetHelper_IO.Enum
  name: SizeUnits
  nameWithType: SizeUnits
  fullName: DotNetHelper_IO.Enum.SizeUnits
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.PathObject.GetParentFolder
  commentId: M:DotNetHelper_IO.PathObject.GetParentFolder
  parent: DotNetHelper_IO.PathObject
  name: GetParentFolder()
  nameWithType: PathObject.GetParentFolder()
  fullName: DotNetHelper_IO.PathObject.GetParentFolder()
  spec.csharp:
  - uid: DotNetHelper_IO.PathObject.GetParentFolder
    name: GetParentFolder
    nameWithType: PathObject.GetParentFolder
    fullName: DotNetHelper_IO.PathObject.GetParentFolder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_IO.PathObject.GetParentFolder
    name: GetParentFolder
    nameWithType: PathObject.GetParentFolder
    fullName: DotNetHelper_IO.PathObject.GetParentFolder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_IO.FolderObject.GetParentFolder*
  commentId: Overload:DotNetHelper_IO.FolderObject.GetParentFolder
  name: GetParentFolder
  nameWithType: FolderObject.GetParentFolder
  fullName: DotNetHelper_IO.FolderObject.GetParentFolder
