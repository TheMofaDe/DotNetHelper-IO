{
  "api/DotNetHelper_IO.Enum.FileType.html": {
    "href": "api/DotNetHelper_IO.Enum.FileType.html",
    "title": "Enum FileType | DotNetHelper-IO",
    "keywords": "Enum FileType Namespace : DotNetHelper_IO.Enum Assembly : DotNetHelper-IO.dll Syntax public enum FileType Fields Name Description AllTypes Csv Json Xml"
  },
  "api/DotNetHelper_IO.Interface.IUserDirectory.html": {
    "href": "api/DotNetHelper_IO.Interface.IUserDirectory.html",
    "title": "Interface IUserDirectory | DotNetHelper-IO",
    "keywords": "Interface IUserDirectory Namespace : DotNetHelper_IO.Interface Assembly : DotNetHelper-IO.dll Syntax public interface IUserDirectory Methods | Improve this Doc View Source DeleteAllUserFolder() Declaration bool DeleteAllUserFolder() Returns Type Description System.Boolean | Improve this Doc View Source GetUserFolder(DirectoryType) Declaration IFolderObject GetUserFolder(DirectoryType type) Parameters Type Name Description DirectoryType type Returns Type Description IFolderObject"
  },
  "api/DotNetHelper_IO.Enum.FileOption.html": {
    "href": "api/DotNetHelper_IO.Enum.FileOption.html",
    "title": "Enum FileOption | DotNetHelper-IO",
    "keywords": "Enum FileOption Enum FileOption Namespace : DotNetHelper_IO.Enum Assembly : DotNetHelper-IO.dll Syntax public enum FileOption Fields Name Description Append The append DoNothingIfExist The do nothing if exist IncrementFileExtensionIfExist Increments the file extension +1 IncrementFileNameIfExist Increment the file name +1 Overwrite The overwrite"
  },
  "api/DotNetHelper_IO.Interface.IFolderObject.html": {
    "href": "api/DotNetHelper_IO.Interface.IFolderObject.html",
    "title": "Interface IFolderObject | DotNetHelper-IO",
    "keywords": "Interface IFolderObject Namespace : DotNetHelper_IO.Interface Assembly : DotNetHelper-IO.dll Syntax public interface IFolderObject"
  },
  "api/DotNetHelper_IO.Enum.IOType.html": {
    "href": "api/DotNetHelper_IO.Enum.IOType.html",
    "title": "Enum IOType | DotNetHelper-IO",
    "keywords": "Enum IOType Namespace : DotNetHelper_IO.Enum Assembly : DotNetHelper-IO.dll Syntax public enum IOType Fields Name Description Both File Folder"
  },
  "api/DotNetHelper_IO.Enum.html": {
    "href": "api/DotNetHelper_IO.Enum.html",
    "title": "Namespace DotNetHelper_IO.Enum | DotNetHelper-IO",
    "keywords": "Namespace DotNetHelper_IO.Enum Enums AddOrRemoveEnum Enum AddOrRemoveEnum FileOption Enum FileOption FileType IOType"
  },
  "api/DotNetHelper_IO.Enum.AddOrRemoveEnum.html": {
    "href": "api/DotNetHelper_IO.Enum.AddOrRemoveEnum.html",
    "title": "Enum AddOrRemoveEnum | DotNetHelper-IO",
    "keywords": "Enum AddOrRemoveEnum Enum AddOrRemoveEnum Namespace : DotNetHelper_IO.Enum Assembly : DotNetHelper-IO.dll Syntax public enum AddOrRemoveEnum Fields Name Description Add The add Remove The remove"
  },
  "api/DotNetHelper_IO.Interface.DirectoryType.html": {
    "href": "api/DotNetHelper_IO.Interface.DirectoryType.html",
    "title": "Enum DirectoryType | DotNetHelper-IO",
    "keywords": "Enum DirectoryType Namespace : DotNetHelper_IO.Interface Assembly : DotNetHelper-IO.dll Syntax public enum DirectoryType Fields Name Description Audio Documents Files Other Photos Root Sqls Videos"
  },
  "api/DotNetHelper_IO.CompressedFile.html": {
    "href": "api/DotNetHelper_IO.CompressedFile.html",
    "title": "Class CompressedFile | DotNetHelper-IO",
    "keywords": "Class CompressedFile Inheritance System.Object CompressedFile Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DotNetHelper_IO Assembly : DotNetHelper-IO.dll Syntax public class CompressedFile"
  },
  "api/DotNetHelper_IO.FileObject.SizeUnits.html": {
    "href": "api/DotNetHelper_IO.FileObject.SizeUnits.html",
    "title": "Enum FileObject.SizeUnits | DotNetHelper-IO",
    "keywords": "Enum FileObject.SizeUnits Namespace : DotNetHelper_IO Assembly : DotNetHelper-IO.dll Syntax public enum SizeUnits Fields Name Description Byte Eb Gb Kb Mb Pb Tb Yb Zb"
  },
  "index.html": {
    "href": "index.html",
    "title": "DotNetHelper-IO | DotNetHelper-IO",
    "keywords": "DotNetHelper-IO This is a simple easy to use thread safe library for handling all types of files & folders How to use var sampleFile = \"C:\\Temp\\dotnet-hosting-2.2.1-win.exe\"; var file = new FileObject(sampleFile); var folder = new FolderObject(sampleFile); var zipFile = new ZipFileObject(sampleFile); // Quick access to all your file information DateTime? CreationTime = file.CreationTime; // 1/23/2019 9:03:26 PM DateTime? CreationTimeUtc = file.CreationTimeUtc; // 1/24/2019 3:03:26 AM Boolean? Exist = file.Exist; // True String Extension = file.Extension; // .exe String FileNameOnly = file.FileNameOnly; // dotnet-hosting-2.2.1-win.exe String FileNameOnlyNoExtension = file.FileNameOnlyNoExtension; // dotnet-hosting-2.2.1-win String FilePathOnly = file.FilePathOnly; // C:\\Temp\\ Int64? FileSize = file.FileSize; // 100720328 String FolderNameOnly = file.FolderNameOnly; // Temp String FullFilePath = file.FullFilePath; // C:\\Temp\\dotnet-hosting-2.2.1-win.exe DateTime? LastAccessTime = file.LastAccessTime; // 1/23/2019 9:03:26 PM DateTime? LastAccessTimeUtc = file.LastAccessTimeUtc; // 1/24/2019 3:03:26 AM DateTime? LastWriteTime = file.LastWriteTime; // 1/23/2019 9:03:47 PM DateTime? LastWriteTimeUtc = file.LastWriteTimeUtc; // 1/24/2019 3:03:47 AM NotifyFilters NotifyFilters = file.NotifyFilters; // FileName, LastWrite, LastAccess, CreationTime FileSystemWatcher Watcher = file.Watcher; // NULL Int32 WatchTimeout = file.WatchTimeout; // 2147483647 // Perform thread safe IO operations with progress reporting public bool MoveTo(string moveToFullFilePath, FileOption option, IProgress<double> progress = null) public bool CopyTo(string copyToFullFilePath, FileOption option, IProgress<double> progress = null) public void DeleteFile(Action<Exception> onFailedDeletion, bool disposeObject = false) // Simplify Encryption void EncryptFile(SymmetricProvider algorithm, byte[] key); void DecryptFile(SymmetricProvider algorithm, byte[] key = null); long? GetFileSize(FileObject.SizeUnits sizeUnits, bool refreshObject = false); Targeted .NET Frameworks NET452 NETSTANDARD2.0"
  },
  "articles/sample.html": {
    "href": "articles/sample.html",
    "title": "Sample Article | DotNetHelper-IO",
    "keywords": "Sample Article This is a example of how to reference an article"
  },
  "api/DotNetHelper_IO.FileObject.html": {
    "href": "api/DotNetHelper_IO.FileObject.html",
    "title": "Class FileObject | DotNetHelper-IO",
    "keywords": "Class FileObject Class FileObject. Inheritance System.Object FileObject ZipFileObject Implements System.IDisposable IFileObject Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DotNetHelper_IO Assembly : DotNetHelper-IO.dll Syntax public class FileObject : IDisposable, IFileObject Constructors | Improve this Doc View Source FileObject(String) Initializes a new instance of the FileObject class. Declaration public FileObject(string file) Parameters Type Name Description System.String file The file. | Improve this Doc View Source FileObject(String, Boolean) Initializes a new instance of the FileObject class. Declaration public FileObject(string file, bool throwOnBadFileName) Parameters Type Name Description System.String file The file. System.Boolean throwOnBadFileName Properties | Improve this Doc View Source CreationTime Gets the creation​ time​. Declaration public DateTime? CreationTime { get; } Property Value Type Description System.Nullable < System.DateTime > The creation​ time​. | Improve this Doc View Source CreationTimeUtc Gets the creation​ time​ UTC. Declaration public DateTime? CreationTimeUtc { get; } Property Value Type Description System.Nullable < System.DateTime > The creation​ time​ UTC. | Improve this Doc View Source Exist Gets a value indicating whether this FileObject is exist. Declaration public bool? Exist { get; } Property Value Type Description System.Nullable < System.Boolean > null if [exist] contains no value, true if [exist]; otherwise, false . | Improve this Doc View Source Extension Gets the extension. Includes the dot (.) Declaration public string Extension { get; } Property Value Type Description System.String The extension. | Improve this Doc View Source FileNameOnly Gets the file name only. Declaration public string FileNameOnly { get; } Property Value Type Description System.String The file name only. | Improve this Doc View Source FileNameOnlyNoExtension Gets the file name only no extension. Declaration public string FileNameOnlyNoExtension { get; } Property Value Type Description System.String The file name only no extension. | Improve this Doc View Source FilePathOnly Gets the file path only. Declaration public string FilePathOnly { get; } Property Value Type Description System.String The file path only. | Improve this Doc View Source FileSize Size is in bytes Declaration public long? FileSize { get; } Property Value Type Description System.Nullable < System.Int64 > The size of the file. | Improve this Doc View Source FolderNameOnly Gets the folder name only. Declaration public string FolderNameOnly { get; } Property Value Type Description System.String The folder name only. | Improve this Doc View Source FullFilePath Gets the full file path. Declaration public string FullFilePath { get; } Property Value Type Description System.String The full file path. | Improve this Doc View Source IncrementFullFilePath Declaration public string IncrementFullFilePath { get; } Property Value Type Description System.String | Improve this Doc View Source LastAccessTime Gets the last​ access​ time. Declaration public DateTime? LastAccessTime { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ access​ time. | Improve this Doc View Source LastAccessTimeUtc Gets the last​ access​ time​ UTC. Declaration public DateTime? LastAccessTimeUtc { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ access​ time​ UTC. | Improve this Doc View Source LastWriteTime Gets the last​ write​ time. Declaration public DateTime? LastWriteTime { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ write​ time. | Improve this Doc View Source LastWriteTimeUtc Gets the last​ write​ time​ UTC. Declaration public DateTime? LastWriteTimeUtc { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ write​ time​ UTC. | Improve this Doc View Source NotifyFilters Gets or sets the notify filters. Declaration public NotifyFilters NotifyFilters { get; set; } Property Value Type Description System.IO.NotifyFilters The notify filters. | Improve this Doc View Source Watcher Gets the watcher. Declaration public FileSystemWatcher Watcher { get; } Property Value Type Description System.IO.FileSystemWatcher The watcher. | Improve this Doc View Source WatchTimeout Gets or sets the watch timeout. Declaration public int WatchTimeout { get; set; } Property Value Type Description System.Int32 The watch timeout. Methods | Improve this Doc View Source ChangeExtension(String, FileOption, IProgress<Double>) Changes the extension of the current file. Does nothing if file doesn't exist return boolean on whether or not the file extension actually got change Declaration public bool ChangeExtension(string newExtension, FileOption option, IProgress<double> progress = null) Parameters Type Name Description System.String newExtension FileOption option System.IProgress < System.Double > progress Returns Type Description System.Boolean Exceptions Type Condition System.Exception System.UnauthorizedAccessException throws if the application doesn't have the required permission | Improve this Doc View Source CopyTo(String, FileOption, IProgress<Double>) return boolean on whether or not the file got move Declaration public bool CopyTo(string copyToFullFilePath, FileOption option, IProgress<double> progress = null) Parameters Type Name Description System.String copyToFullFilePath The new file. FileOption option System.IProgress < System.Double > progress Returns Type Description System.Boolean Exceptions Type Condition System.ArgumentOutOfRangeException System.UnauthorizedAccessException throws if the application doesn't have the required permission | Improve this Doc View Source CreateOrTruncate(Boolean) Creates a empty file if it doesn't exist otherwise truncates it if set to true [overwrite existing files]. Declaration public bool CreateOrTruncate(bool truncate = true) Parameters Type Name Description System.Boolean truncate if set to true [truncate]. Returns Type Description System.Boolean true if XXXX, false otherwise. | Improve this Doc View Source DecryptFile(SymmetricProvider, Byte[]) Decrypts the file. Declaration public void DecryptFile(SymmetricProvider algorithm, byte[] key) Parameters Type Name Description DotNetHelper_Encryption.Enums.SymmetricProvider algorithm The algorithm. System.Byte [] key The key. Exceptions Type Condition System.IO.EndOfStreamException | Improve this Doc View Source DeleteFile(Action<Exception>, Boolean) Deletes the file. If you want an Declaration public void DeleteFile(Action<Exception> onFailedDeletion, bool disposeObject = false) Parameters Type Name Description System.Action < System.Exception > onFailedDeletion System.Boolean disposeObject | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source EncryptFile(SymmetricProvider, Byte[]) Encrypts the file. this method is thread safe. Declaration public void EncryptFile(SymmetricProvider algorithm, byte[] key) Parameters Type Name Description DotNetHelper_Encryption.Enums.SymmetricProvider algorithm The algorithm. System.Byte [] key The key. | Improve this Doc View Source ExportData<T>(List<T>, ISerializer, FileOption, Boolean) Exports the data. Declaration public void ExportData<T>(List<T> data, ISerializer serializer, FileOption options = FileOption.DoNothingIfExist, bool dontCreateFileIfDataEmpty = false) where T : class Parameters Type Name Description System.Collections.Generic.List <T> data The data. ISerializer serializer The serializer. FileOption options The options. System.Boolean dontCreateFileIfDataEmpty Type Parameters Name Description T | Improve this Doc View Source GetFileEncoding() Gets the file encoding. if can not determine the file Encoding this return ascii by default Declaration public Encoding GetFileEncoding() Returns Type Description System.Text.Encoding Encoding. | Improve this Doc View Source GetFileSize(FileObject.SizeUnits, Boolean) Gets the file size display. Declaration public long? GetFileSize(FileObject.SizeUnits sizeUnits, bool refreshObject = false) Parameters Type Name Description FileObject.SizeUnits sizeUnits System.Boolean refreshObject Returns Type Description System.Nullable < System.Int64 > System.String. | Improve this Doc View Source GetFileSizeDisplay(Boolean) Gets the file size display. Declaration public string GetFileSizeDisplay(bool refreshObject = false) Parameters Type Name Description System.Boolean refreshObject Returns Type Description System.String System.String. | Improve this Doc View Source GetFileStream(FileOption) Gets the file stream. Declaration public FileStream GetFileStream(FileOption option) Parameters Type Name Description FileOption option The option. Returns Type Description System.IO.FileStream FileStream. Exceptions Type Condition System.ArgumentOutOfRangeException option - null | Improve this Doc View Source GetIncrementExtension(String) Declaration public string GetIncrementExtension(string seperator = \"\") Parameters Type Name Description System.String seperator Returns Type Description System.String | Improve this Doc View Source GetIncrementFileName(String) Declaration public string GetIncrementFileName(string seperator = \"\") Parameters Type Name Description System.String seperator Returns Type Description System.String | Improve this Doc View Source GetStreamReader() Same As TextReader Declaration public StreamReader GetStreamReader() Returns Type Description System.IO.StreamReader | Improve this Doc View Source GetStreamWriter(Boolean) Gets the stream writer. Declaration public StreamWriter GetStreamWriter(bool append) Parameters Type Name Description System.Boolean append if set to true [append]. Returns Type Description System.IO.StreamWriter StreamWriter. | Improve this Doc View Source ImportData<T>(ISerializer) Imports the data. Declaration public T ImportData<T>(ISerializer serializer) where T : class Parameters Type Name Description ISerializer serializer The serializer. Returns Type Description T List<T>. Type Parameters Name Description T | Improve this Doc View Source ImportDataList<T>(ISerializer, Type) Imports the data. Declaration public IEnumerable<T> ImportDataList<T>(ISerializer serializer, Type type = null) where T : class Parameters Type Name Description ISerializer serializer The serializer. System.Type type Returns Type Description System.Collections.Generic.IEnumerable <T> List<T>. Type Parameters Name Description T | Improve this Doc View Source IsFileLocked() Declaration protected virtual bool IsFileLocked() Returns Type Description System.Boolean | Improve this Doc View Source MoveTo(String, FileOption, IProgress<Double>) return boolean on whether or not the file got move Declaration public bool MoveTo(string moveToFullFilePath, FileOption option, IProgress<double> progress = null) Parameters Type Name Description System.String moveToFullFilePath FileOption option System.IProgress < System.Double > progress Returns Type Description System.Boolean Exceptions Type Condition System.Exception System.UnauthorizedAccessException throws if the application doesn't have the required permission | Improve this Doc View Source ReadFile() Reads the file. Declaration public string ReadFile() Returns Type Description System.String System.String. | Improve this Doc View Source ReadFileToList() Reads the file to list. Declaration public List<string> ReadFileToList() Returns Type Description System.Collections.Generic.List < System.String > List<System.String>. | Improve this Doc View Source ReadFileToStream() Hey, Developer Don't Forget To Dispose Of This When Your Done .. : ) Declaration public Stream ReadFileToStream() Returns Type Description System.IO.Stream Stream. | Improve this Doc View Source RefreshObject() Refreshes the object. Declaration public void RefreshObject() | Improve this Doc View Source SetFileAttribute(AddOrRemoveEnum, List<FileAttributes>) Sets the file attribute. Declaration public void SetFileAttribute(AddOrRemoveEnum option, List<FileAttributes> list) Parameters Type Name Description AddOrRemoveEnum option The option. System.Collections.Generic.List < System.IO.FileAttributes > list The list. | Improve this Doc View Source StartWatching(WatcherChangeTypes, Boolean) Starts the watching. Declaration public void StartWatching(WatcherChangeTypes changeTypes = WatcherChangeTypes.Created | WatcherChangeTypes.Deleted | WatcherChangeTypes.Changed | WatcherChangeTypes.Renamed | WatcherChangeTypes.All, bool onNewThread = true) Parameters Type Name Description System.IO.WatcherChangeTypes changeTypes The change types. System.Boolean onNewThread if set to true [on new thread]. Exceptions Type Condition System.Exception | Improve this Doc View Source StopWatching() Stops the watching. Declaration public void StopWatching() | Improve this Doc View Source WriteContentToFile(String, Encoding, FileOption) Writes the content to file. This method is thread safe Declaration public void WriteContentToFile(string content, Encoding encoding, FileOption option = FileOption.Append) Parameters Type Name Description System.String content The content. System.Text.Encoding encoding FileOption option The option. | Improve this Doc View Source WriteStreamToFile(Stream, IProgress<Double>, FileOption) Writes the stream to file. this method is thread safe Declaration public bool WriteStreamToFile(Stream stream, IProgress<double> progress = null, FileOption option = FileOption.Overwrite) Parameters Type Name Description System.IO.Stream stream The stream. System.IProgress < System.Double > progress The progress. FileOption option Returns Type Description System.Boolean true if XXXX, false otherwise. | Improve this Doc View Source WriteStreamToFileAsync(Stream, IProgress<Double>, Boolean) write stream to file as an asynchronous operation. this method is not thread safe Declaration public Task<bool> WriteStreamToFileAsync(Stream stream, IProgress<double> progress = null, bool overwriteIfFileExist = true) Parameters Type Name Description System.IO.Stream stream The stream. System.IProgress < System.Double > progress The progress. System.Boolean overwriteIfFileExist if set to true [overwrite if file exist]. Returns Type Description System.Threading.Tasks.Task < System.Boolean > Task<System.Boolean>. Implements System.IDisposable IFileObject See Also System.IDisposable"
  },
  "api/DotNetHelper_IO.Interface.IFileObject.html": {
    "href": "api/DotNetHelper_IO.Interface.IFileObject.html",
    "title": "Interface IFileObject | DotNetHelper-IO",
    "keywords": "Interface IFileObject Namespace : DotNetHelper_IO.Interface Assembly : DotNetHelper-IO.dll Syntax public interface IFileObject Properties | Improve this Doc View Source CreationTime Gets the creation​ time​. Declaration DateTime? CreationTime { get; } Property Value Type Description System.Nullable < System.DateTime > The creation​ time​. | Improve this Doc View Source CreationTimeUtc Gets the creation​ time​ UTC. Declaration DateTime? CreationTimeUtc { get; } Property Value Type Description System.Nullable < System.DateTime > The creation​ time​ UTC. | Improve this Doc View Source Exist Gets a value indicating whether this IFileObject is exist. Declaration bool? Exist { get; } Property Value Type Description System.Nullable < System.Boolean > null if [exist] contains no value, true if [exist]; otherwise, false . | Improve this Doc View Source Extension Gets the extension. Declaration string Extension { get; } Property Value Type Description System.String The extension. | Improve this Doc View Source FileNameOnly Gets the file name only. Declaration string FileNameOnly { get; } Property Value Type Description System.String The file name only. | Improve this Doc View Source FileNameOnlyNoExtension Gets the file name only no extension. Declaration string FileNameOnlyNoExtension { get; } Property Value Type Description System.String The file name only no extension. | Improve this Doc View Source FilePathOnly Gets the file path only. Declaration string FilePathOnly { get; } Property Value Type Description System.String The file path only. | Improve this Doc View Source FileSize Size is in bytes Declaration long? FileSize { get; } Property Value Type Description System.Nullable < System.Int64 > The size of the file. | Improve this Doc View Source FolderNameOnly Gets the folder name only. Declaration string FolderNameOnly { get; } Property Value Type Description System.String The folder name only. | Improve this Doc View Source FullFilePath Gets the full file path. Declaration string FullFilePath { get; } Property Value Type Description System.String The full file path. | Improve this Doc View Source LastAccessTime Gets the last​ access​ time. Declaration DateTime? LastAccessTime { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ access​ time. | Improve this Doc View Source LastAccessTimeUtc Gets the last​ access​ time​ UTC. Declaration DateTime? LastAccessTimeUtc { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ access​ time​ UTC. | Improve this Doc View Source LastWriteTime Gets the last​ write​ time. Declaration DateTime? LastWriteTime { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ write​ time. | Improve this Doc View Source LastWriteTimeUtc Gets the last​ write​ time​ UTC. Declaration DateTime? LastWriteTimeUtc { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ write​ time​ UTC. | Improve this Doc View Source NotifyFilters Gets or sets the notify filters. Declaration NotifyFilters NotifyFilters { get; set; } Property Value Type Description System.IO.NotifyFilters The notify filters. | Improve this Doc View Source Watcher Gets the watcher. Declaration FileSystemWatcher Watcher { get; } Property Value Type Description System.IO.FileSystemWatcher The watcher. | Improve this Doc View Source WatchTimeout Gets or sets the watch timeout. Declaration int WatchTimeout { get; set; } Property Value Type Description System.Int32 The watch timeout. Methods | Improve this Doc View Source ChangeExtension(String, FileOption, IProgress<Double>) Changes the extension of the current file. Does nothing if file doesn't exist return boolean on whether or not the file extension actually got change and refreshes the object with the new file path if it was successful Declaration bool ChangeExtension(string newExtension, FileOption option, IProgress<double> progress = null) Parameters Type Name Description System.String newExtension FileOption option System.IProgress < System.Double > progress Returns Type Description System.Boolean Exceptions Type Condition System.Exception System.UnauthorizedAccessException throws if the application doesn't have the required permission | Improve this Doc View Source CopyTo(String, FileOption, IProgress<Double>) return boolean on whether or not the file got move and refreshes object with the new file path if it was successfully moved Declaration bool CopyTo(string copyToFullFilePath, FileOption option, IProgress<double> progress = null) Parameters Type Name Description System.String copyToFullFilePath The new file. FileOption option System.IProgress < System.Double > progress Returns Type Description System.Boolean Exceptions Type Condition System.ArgumentOutOfRangeException System.UnauthorizedAccessException throws if the application doesn't have the required permission | Improve this Doc View Source CreateOrTruncate(Boolean) Creates a empty file if it doesn't exist otherwise truncates it if set to true [overwrite existing files]. Declaration bool CreateOrTruncate(bool truncate = true) Parameters Type Name Description System.Boolean truncate if set to true [truncate]. Returns Type Description System.Boolean true if XXXX, false otherwise. | Improve this Doc View Source DecryptFile(SymmetricProvider, Byte[]) Decrypts the file. Declaration void DecryptFile(SymmetricProvider algorithm, byte[] key) Parameters Type Name Description DotNetHelper_Encryption.Enums.SymmetricProvider algorithm The algorithm. System.Byte [] key The key. defaults to the IAppconfig interface if key is null Exceptions Type Condition System.IO.EndOfStreamException | Improve this Doc View Source DeleteFile(Action<Exception>, Boolean) Deletes the file. Declaration void DeleteFile(Action<Exception> onFailedDeletion, bool disposeObject = false) Parameters Type Name Description System.Action < System.Exception > onFailedDeletion System.Boolean disposeObject | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration void Dispose() | Improve this Doc View Source EncryptFile(SymmetricProvider, Byte[]) Encrypts the file. Declaration void EncryptFile(SymmetricProvider algorithm, byte[] key) Parameters Type Name Description DotNetHelper_Encryption.Enums.SymmetricProvider algorithm The algorithm. System.Byte [] key The key. defaults to the IAppconfig interface if key is null | Improve this Doc View Source ExportData<T>(List<T>, ISerializer, FileOption, Boolean) Exports the data. Declaration void ExportData<T>(List<T> data, ISerializer serializer, FileOption options = FileOption.DoNothingIfExist, bool dontCreateFileIfDataEmpty = false) where T : class Parameters Type Name Description System.Collections.Generic.List <T> data The data. ISerializer serializer The serializer. FileOption options The options. System.Boolean dontCreateFileIfDataEmpty Type Parameters Name Description T | Improve this Doc View Source GetFileEncoding() Gets the file encoding. Declaration Encoding GetFileEncoding() Returns Type Description System.Text.Encoding Encoding. | Improve this Doc View Source GetFileSize(FileObject.SizeUnits, Boolean) Gets the file size in the specified sizeUnit. Declaration long? GetFileSize(FileObject.SizeUnits sizeUnits, bool refreshObject = false) Parameters Type Name Description FileObject.SizeUnits sizeUnits System.Boolean refreshObject Returns Type Description System.Nullable < System.Int64 > System.String. | Improve this Doc View Source GetFileSizeDisplay(Boolean) Gets the file size display. Declaration string GetFileSizeDisplay(bool refreshObject = false) Parameters Type Name Description System.Boolean refreshObject Returns Type Description System.String System.String. | Improve this Doc View Source GetFileStream(FileOption) Gets the file stream. Declaration FileStream GetFileStream(FileOption option) Parameters Type Name Description FileOption option The option. Returns Type Description System.IO.FileStream FileStream. Exceptions Type Condition System.ArgumentOutOfRangeException option - null | Improve this Doc View Source GetStreamReader() Same As TextReader Declaration StreamReader GetStreamReader() Returns Type Description System.IO.StreamReader | Improve this Doc View Source GetStreamWriter(Boolean) Gets the stream writer. Declaration StreamWriter GetStreamWriter(bool append) Parameters Type Name Description System.Boolean append if set to true [append]. Returns Type Description System.IO.StreamWriter StreamWriter. | Improve this Doc View Source ImportData<T>(ISerializer) Imports the data. Declaration T ImportData<T>(ISerializer serializer) where T : class Parameters Type Name Description ISerializer serializer The serializer. Returns Type Description T List<T>. Type Parameters Name Description T | Improve this Doc View Source ImportDataList<T>(ISerializer, Type) Imports the data. Declaration IEnumerable<T> ImportDataList<T>(ISerializer serializer, Type type = null) where T : class Parameters Type Name Description ISerializer serializer The serializer. System.Type type Returns Type Description System.Collections.Generic.IEnumerable <T> List<T>. Type Parameters Name Description T | Improve this Doc View Source MoveTo(String, FileOption, IProgress<Double>) return boolean on whether or not the file got move and refreshes object with the new file path if it was successfully moved Declaration bool MoveTo(string moveToFullFilePath, FileOption option, IProgress<double> progress = null) Parameters Type Name Description System.String moveToFullFilePath FileOption option System.IProgress < System.Double > progress Returns Type Description System.Boolean Exceptions Type Condition System.Exception System.UnauthorizedAccessException throws if the application doesn't have the required permission | Improve this Doc View Source ReadFile() Reads the file. Declaration string ReadFile() Returns Type Description System.String System.String. | Improve this Doc View Source ReadFileToList() Reads the file to list. Declaration List<string> ReadFileToList() Returns Type Description System.Collections.Generic.List < System.String > List<System.String>. | Improve this Doc View Source ReadFileToStream() Hey, Developer Don't Forget To Dispose Of This When Your Done .. : ) Declaration Stream ReadFileToStream() Returns Type Description System.IO.Stream Stream. | Improve this Doc View Source RefreshObject() Refreshes the object. Declaration void RefreshObject() | Improve this Doc View Source SetFileAttribute(AddOrRemoveEnum, List<FileAttributes>) Sets the file attribute. Declaration void SetFileAttribute(AddOrRemoveEnum option, List<FileAttributes> list) Parameters Type Name Description AddOrRemoveEnum option The option. System.Collections.Generic.List < System.IO.FileAttributes > list The list. | Improve this Doc View Source StartWatching(WatcherChangeTypes, Boolean) Starts the watching. Declaration void StartWatching(WatcherChangeTypes changeTypes = WatcherChangeTypes.Created | WatcherChangeTypes.Deleted | WatcherChangeTypes.Changed | WatcherChangeTypes.Renamed | WatcherChangeTypes.All, bool onNewThread = true) Parameters Type Name Description System.IO.WatcherChangeTypes changeTypes The change types. System.Boolean onNewThread if set to true [on new thread]. Exceptions Type Condition System.Exception | Improve this Doc View Source StopWatching() Stops the watching. Declaration void StopWatching() | Improve this Doc View Source WriteContentToFile(String, Encoding, FileOption) Writes the content to file. Declaration void WriteContentToFile(string content, Encoding encoding, FileOption option = FileOption.Append) Parameters Type Name Description System.String content The content. System.Text.Encoding encoding FileOption option The option. | Improve this Doc View Source WriteStreamToFile(Stream, IProgress<Double>, FileOption) Writes the stream to file. Declaration bool WriteStreamToFile(Stream stream, IProgress<double> progress = null, FileOption option = FileOption.Overwrite) Parameters Type Name Description System.IO.Stream stream The stream. System.IProgress < System.Double > progress The progress. FileOption option Returns Type Description System.Boolean true if XXXX, false otherwise. | Improve this Doc View Source WriteStreamToFileAsync(Stream, IProgress<Double>, Boolean) write stream to file as an asynchronous operation. Declaration Task<bool> WriteStreamToFileAsync(Stream stream, IProgress<double> progress = null, bool overwriteIfFileExist = true) Parameters Type Name Description System.IO.Stream stream The stream. System.IProgress < System.Double > progress The progress. System.Boolean overwriteIfFileExist if set to true [overwrite if file exist]. Returns Type Description System.Threading.Tasks.Task < System.Boolean > Task<System.Boolean>."
  },
  "api/DotNetHelper_IO.FolderObject.html": {
    "href": "api/DotNetHelper_IO.FolderObject.html",
    "title": "Class FolderObject | DotNetHelper-IO",
    "keywords": "Class FolderObject Class FolderObject. Inheritance System.Object FolderObject Implements System.IDisposable IFolderObject Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DotNetHelper_IO Assembly : DotNetHelper-IO.dll Syntax public class FolderObject : IDisposable, IFolderObject Constructors | Improve this Doc View Source FolderObject(String, Boolean, Boolean, Boolean) Initializes a new instance of the FolderObject class. Declaration public FolderObject(string path, bool loadSubfolders = false, bool loadFilesInFolder = false, bool loadRecursive = false) Parameters Type Name Description System.String path The path. System.Boolean loadSubfolders if set to true [load subfolders]. System.Boolean loadFilesInFolder if set to true [load files in folder]. System.Boolean loadRecursive Properties | Improve this Doc View Source CreationTime Gets the creation​ time​. Declaration public DateTime? CreationTime { get; } Property Value Type Description System.Nullable < System.DateTime > The creation​ time​. | Improve this Doc View Source CreationTimeUtc Gets the creation​ time​ UTC. Declaration public DateTime? CreationTimeUtc { get; } Property Value Type Description System.Nullable < System.DateTime > The creation​ time​ UTC. | Improve this Doc View Source Exist Gets a value indicating whether this FolderObject is exist. Declaration public bool? Exist { get; } Property Value Type Description System.Nullable < System.Boolean > null if [exist] contains no value, true if [exist]; otherwise, false . | Improve this Doc View Source Files Gets the files. Declaration public List<FileObject> Files { get; } Property Value Type Description System.Collections.Generic.List < FileObject > The files. | Improve this Doc View Source FolderNameOnly Gets the folder name only. Declaration public string FolderNameOnly { get; } Property Value Type Description System.String The folder name only. | Improve this Doc View Source FullFolderPath Gets the full folder path. Declaration public string FullFolderPath { get; } Property Value Type Description System.String The full folder path. | Improve this Doc View Source LastAccessTime Gets the last​ access​ time. Declaration public DateTime? LastAccessTime { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ access​ time. | Improve this Doc View Source LastAccessTimeUtc Gets the last​ access​ time​ UTC. Declaration public DateTime? LastAccessTimeUtc { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ access​ time​ UTC. | Improve this Doc View Source LastWriteTime Gets the last​ write​ time. Declaration public DateTime? LastWriteTime { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ write​ time. | Improve this Doc View Source LastWriteTimeUtc Gets the last​ write​ time​ UTC. Declaration public DateTime? LastWriteTimeUtc { get; } Property Value Type Description System.Nullable < System.DateTime > The last​ write​ time​ UTC. | Improve this Doc View Source LoadFilesInFolder Gets a value indicating whether [load files in folder]. Declaration public bool LoadFilesInFolder { get; } Property Value Type Description System.Boolean true if [load files in folder]; otherwise, false . | Improve this Doc View Source LoadRecursive Gets a value indicating whether [load files in folder recursively]. Declaration public bool LoadRecursive { get; } Property Value Type Description System.Boolean true if [load files in folder recursively]; otherwise, false . | Improve this Doc View Source LoadSubFolders Gets a value indicating whether [load sub folders]. Declaration public bool LoadSubFolders { get; } Property Value Type Description System.Boolean true if [load sub folders]; otherwise, false . | Improve this Doc View Source NotifyFilters Gets or sets the notify filters. Declaration public NotifyFilters NotifyFilters { get; set; } Property Value Type Description System.IO.NotifyFilters The notify filters. | Improve this Doc View Source ParentFolder Gets the parent folder. Declaration public string ParentFolder { get; } Property Value Type Description System.String The parent folder. | Improve this Doc View Source ParentNameOnly Gets the parent. Declaration public string ParentNameOnly { get; } Property Value Type Description System.String The parent. | Improve this Doc View Source Subfolders Gets the subfolders. Declaration public List<FolderObject> Subfolders { get; } Property Value Type Description System.Collections.Generic.List < FolderObject > The subfolders. | Improve this Doc View Source Watcher Gets the watcher. Declaration public FileSystemWatcher Watcher { get; } Property Value Type Description System.IO.FileSystemWatcher The watcher. | Improve this Doc View Source WatchTimeout Gets or sets the watch timeout. Declaration public int WatchTimeout { get; set; } Property Value Type Description System.Int32 The watch timeout. Methods | Improve this Doc View Source CopyTo(String, Boolean) Copies to. Declaration public void CopyTo(string location, bool overwriteIfExist = true) Parameters Type Name Description System.String location The location. System.Boolean overwriteIfExist if set to true [overwrite if exist]. Exceptions Type Condition System.Exception | Improve this Doc View Source Create(Action<Exception>) Creates all directories and subdirectories in the specified path unless they already exist. Declaration public bool Create(Action<Exception> onException) Parameters Type Name Description System.Action < System.Exception > onException callback to execute if an exception is catch. Returns Type Description System.Boolean An object that represents the directory at the specified path. This object is returned regardless of whether a directory at the specified path already exists. Exceptions Type Condition System.IO.IOException The directory specified is a file.-or-The network name is not known. System.UnauthorizedAccessException The caller does not have the required permission. System.ArgumentException System.ArgumentNullException System.IO.PathTooLongException The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. System.IO.DirectoryNotFoundException The specified path is invalid (for example, it is on an unmapped drive). System.NotSupportedException | Improve this Doc View Source DeleteFolder(Action<Exception>, Boolean) Deletes the folder. Declaration public void DeleteFolder(Action<Exception> onException, bool dispose = true) Parameters Type Name Description System.Action < System.Exception > onException System.Boolean dispose | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source GetAllFiles(String, Boolean) return all files in current folder object path and with filtering if pattern parameter is set Declaration public IEnumerable<FileObject> GetAllFiles(string pattern = \"*\", bool recursive = false) Parameters Type Name Description System.String pattern System.Boolean recursive Returns Type Description System.Collections.Generic.IEnumerable < FileObject > | Improve this Doc View Source GetAllFolders(String, Boolean) return all files in current folder object path and with filtering if pattern parameter is set Declaration public IEnumerable<FolderObject> GetAllFolders(string pattern = \"*\", bool recursive = false) Parameters Type Name Description System.String pattern System.Boolean recursive Returns Type Description System.Collections.Generic.IEnumerable < FolderObject > | Improve this Doc View Source MoveTo(String, Boolean) Moves to. Declaration public void MoveTo(string location, bool overwriteIfExist = true) Parameters Type Name Description System.String location The location. System.Boolean overwriteIfExist if set to true [overwrite if exist]. Exceptions Type Condition System.Exception | Improve this Doc View Source RefreshObject(Boolean, Boolean, Boolean) Refreshes the object. Declaration public void RefreshObject(bool loadSubfolders = false, bool loadFilesInFolder = false, bool loadRecursive = false) Parameters Type Name Description System.Boolean loadSubfolders if set to true [load subfolders]. System.Boolean loadFilesInFolder if set to true [load files in folder]. System.Boolean loadRecursive | Improve this Doc View Source SetFileAttribute(AddOrRemoveEnum, List<FileAttributes>) Sets the file attribute. Declaration public void SetFileAttribute(AddOrRemoveEnum option, List<FileAttributes> list) Parameters Type Name Description AddOrRemoveEnum option The option. System.Collections.Generic.List < System.IO.FileAttributes > list The list. | Improve this Doc View Source StartWatching(WatcherChangeTypes, Boolean) A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out. Declaration public void StartWatching(WatcherChangeTypes changeTypes = WatcherChangeTypes.Created | WatcherChangeTypes.Deleted | WatcherChangeTypes.Changed | WatcherChangeTypes.Renamed | WatcherChangeTypes.All, bool onNewThread = true) Parameters Type Name Description System.IO.WatcherChangeTypes changeTypes The change types. System.Boolean onNewThread if set to true [on new thread]. Exceptions Type Condition System.Exception | Improve this Doc View Source StopWatching() Stops the watching. Declaration public void StopWatching() | Improve this Doc View Source ZipFolderToFileSystem(FileObject, ArchiveType, Boolean) Zips the folder to file system. Declaration public void ZipFolderToFileSystem(FileObject zipfile, ArchiveType archiveType, bool overWrite = false) Parameters Type Name Description FileObject zipfile The zipfile. SharpCompress.Common.ArchiveType archiveType Type of the archive. System.Boolean overWrite if set to true [over write]. Exceptions Type Condition System.NotImplementedException This Feature Hasn't Be Implemented Yet For Rar Files or This Feature Hasn't Be Implemented Yet For Rar Files System.ArgumentOutOfRangeException archiveType - null | Improve this Doc View Source ZipFolderToMemory() Zips the folder to memory. Declaration public MemoryStream ZipFolderToMemory() Returns Type Description System.IO.MemoryStream MemoryStream. Implements System.IDisposable IFolderObject See Also System.IDisposable"
  },
  "api/DotNetHelper_IO.Interface.ISerializer.html": {
    "href": "api/DotNetHelper_IO.Interface.ISerializer.html",
    "title": "Interface ISerializer | DotNetHelper-IO",
    "keywords": "Interface ISerializer Inherited Members System.IConvertible.GetTypeCode() System.IConvertible.ToBoolean(System.IFormatProvider) System.IConvertible.ToChar(System.IFormatProvider) System.IConvertible.ToSByte(System.IFormatProvider) System.IConvertible.ToByte(System.IFormatProvider) System.IConvertible.ToInt16(System.IFormatProvider) System.IConvertible.ToUInt16(System.IFormatProvider) System.IConvertible.ToInt32(System.IFormatProvider) System.IConvertible.ToUInt32(System.IFormatProvider) System.IConvertible.ToInt64(System.IFormatProvider) System.IConvertible.ToUInt64(System.IFormatProvider) System.IConvertible.ToSingle(System.IFormatProvider) System.IConvertible.ToDouble(System.IFormatProvider) System.IConvertible.ToDecimal(System.IFormatProvider) System.IConvertible.ToDateTime(System.IFormatProvider) System.IConvertible.ToString(System.IFormatProvider) System.IConvertible.ToType(System.Type, System.IFormatProvider) Namespace : DotNetHelper_IO.Interface Assembly : DotNetHelper-IO.dll Syntax public interface ISerializer : IConvertible Methods | Improve this Doc View Source DeserializeFromFile(String) Deserializes from file to a dynamic Object Declaration dynamic DeserializeFromFile(string fullFilePath) Parameters Type Name Description System.String fullFilePath The full file path. Returns Type Description System.Object dynamic. | Improve this Doc View Source DeserializeFromFile(Type, String) Deserializes from file. Declaration object DeserializeFromFile(Type type, string fullFilePath) Parameters Type Name Description System.Type type The type. System.String fullFilePath Returns Type Description System.Object System.Object. Exceptions Type Condition System.ArgumentNullException type | Improve this Doc View Source DeserializeFromFile<T>(String) Deserializes from file. Declaration T DeserializeFromFile<T>(string fullFilePath) where T : class Parameters Type Name Description System.String fullFilePath Returns Type Description T ``0. Type Parameters Name Description T Exceptions Type Condition System.ArgumentNullException file | Improve this Doc View Source DeserializeFromStream(Stream, Type) Deserializes from stream. Declaration object DeserializeFromStream(Stream stream, Type type) Parameters Type Name Description System.IO.Stream stream The stream. System.Type type The type. Returns Type Description System.Object System.Object. Exceptions Type Condition System.ArgumentNullException stream | Improve this Doc View Source DeserializeFromStream<T>(Stream) Deserializes from stream. Declaration T DeserializeFromStream<T>(Stream stream) Parameters Type Name Description System.IO.Stream stream The stream. Returns Type Description T ``0. Type Parameters Name Description T Exceptions Type Condition System.ArgumentNullException stream | Improve this Doc View Source DeserializeFromString(String, Type) Deserializes from string. Declaration object DeserializeFromString(string content, Type type) Parameters Type Name Description System.String content System.Type type The type. Returns Type Description System.Object System.Object. Exceptions Type Condition System.ArgumentNullException json | Improve this Doc View Source DeserializeFromString<T>(String) Deserializes from string. Declaration T DeserializeFromString<T>(string content) where T : class Parameters Type Name Description System.String content Returns Type Description T ``0. Type Parameters Name Description T Exceptions Type Condition System.ArgumentNullException text | Improve this Doc View Source DeserializeListFromFile(String) Deserializes from file to a list of dynamic objects Declaration IEnumerable<dynamic> DeserializeListFromFile(string fullFilePath) Parameters Type Name Description System.String fullFilePath The full file path. Returns Type Description System.Collections.Generic.IEnumerable < System.Object > IEnumerable<dynamic>. | Improve this Doc View Source DeserializeListFromFile<T>(String) Deserializes from file to a list of dynamic objects Declaration IEnumerable<T> DeserializeListFromFile<T>(string fullFilePath) where T : class Parameters Type Name Description System.String fullFilePath The full file path. Returns Type Description System.Collections.Generic.IEnumerable <T> IEnumerable<dynamic>. Type Parameters Name Description T | Improve this Doc View Source DeserializeToCSharpClass(String, String) Declaration string DeserializeToCSharpClass(string content, string className = null) Parameters Type Name Description System.String content System.String className Returns Type Description System.String | Improve this Doc View Source DeserializeToList(String) Deserializes from a string to a list of dynamic objects Declaration IEnumerable<dynamic> DeserializeToList(string content) Parameters Type Name Description System.String content A delimited CSV string. Returns Type Description System.Collections.Generic.IEnumerable < System.Object > IEnumerable<dynamic>. | Improve this Doc View Source DeserializeToList<T>(String) Deserializes from string. Declaration List<T> DeserializeToList<T>(string content) where T : class Parameters Type Name Description System.String content Returns Type Description System.Collections.Generic.List <T> List Of T Type Parameters Name Description T Exceptions Type Condition System.ArgumentNullException text | Improve this Doc View Source SerializeToFile(Object, String, FileOption) Serializes to file. Declaration void SerializeToFile(dynamic obj, string fullFilePath, FileOption mode) Parameters Type Name Description System.Object obj The obj. System.String fullFilePath FileOption mode Exceptions Type Condition System.ArgumentNullException obj | Improve this Doc View Source SerializeToFile(Object, Type, String, FileOption) Serializes to file. Declaration void SerializeToFile(object obj, Type type, string fullFilePath, FileOption mode) Parameters Type Name Description System.Object obj The obj. System.Type type System.String fullFilePath FileOption mode Exceptions Type Condition System.ArgumentNullException obj | Improve this Doc View Source SerializeToFile<T>(T, String, FileOption) Serializes to file. Declaration void SerializeToFile<T>(T obj, string fullFilePath, FileOption mode) where T : class Parameters Type Name Description T obj The obj. System.String fullFilePath FileOption mode Type Parameters Name Description T Exceptions Type Condition System.ArgumentNullException obj | Improve this Doc View Source SerializeToFile<T>(IEnumerable<T>, String, FileOption) Serializes to file. Declaration void SerializeToFile<T>(IEnumerable<T> list, string fullFilePath, FileOption mode) where T : class Parameters Type Name Description System.Collections.Generic.IEnumerable <T> list System.String fullFilePath FileOption mode Type Parameters Name Description T Exceptions Type Condition System.ArgumentNullException obj | Improve this Doc View Source SerializeToStream(Object, Type, Stream, Int32, Boolean) Serializes to stream. Declaration void SerializeToStream(object obj, Type type, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description System.Object obj The obj. System.Type type System.IO.Stream stream The stream. System.Int32 bufferSize System.Boolean leaveStreamOpen Exceptions Type Condition System.ArgumentNullException obj | Improve this Doc View Source SerializeToStream<T>(T, Stream, Int32, Boolean) Serializes to stream. Declaration void SerializeToStream<T>(T obj, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description T obj The obj. System.IO.Stream stream The stream. System.Int32 bufferSize System.Boolean leaveStreamOpen Type Parameters Name Description T Exceptions Type Condition System.ArgumentNullException obj | Improve this Doc View Source SerializeToString(Object) Serializes to string. Declaration string SerializeToString(object obj) Parameters Type Name Description System.Object obj The obj. Returns Type Description System.String System.String. Exceptions Type Condition System.ArgumentNullException obj | Improve this Doc View Source SerializeToString<T>(T) Serializes to string. Declaration string SerializeToString<T>(T obj) where T : class Parameters Type Name Description T obj The obj. Returns Type Description System.String System.String. Type Parameters Name Description T Exceptions Type Condition System.ArgumentNullException obj"
  },
  "api/DotNetHelper_IO.Interface.html": {
    "href": "api/DotNetHelper_IO.Interface.html",
    "title": "Namespace DotNetHelper_IO.Interface | DotNetHelper-IO",
    "keywords": "Namespace DotNetHelper_IO.Interface Interfaces IFileObject IFolderObject ISerializer IUserDirectory Enums DirectoryType"
  },
  "api/DotNetHelper_IO.html": {
    "href": "api/DotNetHelper_IO.html",
    "title": "Namespace DotNetHelper_IO | DotNetHelper-IO",
    "keywords": "Namespace DotNetHelper_IO Classes CompressedFile FileObject Class FileObject. FolderObject Class FolderObject. ZipFileObject Enums FileObject.SizeUnits"
  },
  "api/DotNetHelper_IO.ZipFileObject.html": {
    "href": "api/DotNetHelper_IO.ZipFileObject.html",
    "title": "Class ZipFileObject | DotNetHelper-IO",
    "keywords": "Class ZipFileObject Inheritance System.Object FileObject ZipFileObject Implements System.IDisposable IFileObject Inherited Members FileObject.FileNameOnly FileObject.FileNameOnlyNoExtension FileObject.FilePathOnly FileObject.FullFilePath FileObject.IncrementFullFilePath FileObject.LastWriteTimeUtc FileObject.LastWriteTime FileObject.LastAccessTime FileObject.LastAccessTimeUtc FileObject.CreationTimeUtc FileObject.CreationTime FileObject.Extension FileObject.FolderNameOnly FileObject.FileSize FileObject.Exist FileObject.WatchTimeout FileObject.Watcher FileObject.NotifyFilters FileObject.RefreshObject() FileObject.CopyTo(String, FileOption, IProgress<Double>) FileObject.MoveTo(String, FileOption, IProgress<Double>) FileObject.SetFileAttribute(AddOrRemoveEnum, List<FileAttributes>) FileObject.ChangeExtension(String, FileOption, IProgress<Double>) FileObject.DeleteFile(Action<Exception>, Boolean) FileObject.GetIncrementFileName(String) FileObject.GetIncrementExtension(String) FileObject.ReadFileToList() FileObject.ReadFile() FileObject.ReadFileToStream() FileObject.GetFileStream(FileOption) FileObject.GetStreamWriter(Boolean) FileObject.GetStreamReader() FileObject.WriteContentToFile(String, Encoding, FileOption) FileObject.EncryptFile(SymmetricProvider, Byte[]) FileObject.DecryptFile(SymmetricProvider, Byte[]) FileObject.ImportData<T>(ISerializer) FileObject.ImportDataList<T>(ISerializer, Type) FileObject.ExportData<T>(List<T>, ISerializer, FileOption, Boolean) FileObject.WriteStreamToFileAsync(Stream, IProgress<Double>, Boolean) FileObject.WriteStreamToFile(Stream, IProgress<Double>, FileOption) FileObject.GetFileEncoding() FileObject.GetFileSizeDisplay(Boolean) FileObject.GetFileSize(FileObject.SizeUnits, Boolean) FileObject.IsFileLocked() FileObject.StartWatching(WatcherChangeTypes, Boolean) FileObject.StopWatching() FileObject.Dispose() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : DotNetHelper_IO Assembly : DotNetHelper-IO.dll Syntax public class ZipFileObject : FileObject, IDisposable, IFileObject Constructors | Improve this Doc View Source ZipFileObject(String, ArchiveType) Declaration public ZipFileObject(string file, ArchiveType type = ArchiveType.Zip) Parameters Type Name Description System.String file SharpCompress.Common.ArchiveType type Properties | Improve this Doc View Source Type Declaration public ArchiveType Type { get; } Property Value Type Description SharpCompress.Common.ArchiveType Methods | Improve this Doc View Source AddFilesToZip(List<String>, FileOption) Declaration public void AddFilesToZip(List<string> files, FileOption option = FileOption.Overwrite) Parameters Type Name Description System.Collections.Generic.List < System.String > files new files to be added to the zip file FileOption option how to handle files that will be added to the zip | Improve this Doc View Source AddFileToZip(String) Declaration public void AddFileToZip(string fullFilePath) Parameters Type Name Description System.String fullFilePath | Improve this Doc View Source CreateOrTruncate(Boolean) Creates a empty file if it doesn't exist otherwise truncates it if set to true [overwrite existing files]. Declaration public bool CreateOrTruncate(bool truncate = true) Parameters Type Name Description System.Boolean truncate if set to true [truncate]. Returns Type Description System.Boolean true if XXXX, false otherwise. | Improve this Doc View Source RemoveFilesToZip(Predicate<IArchiveEntry>) Declaration public void RemoveFilesToZip(Predicate<IArchiveEntry> whereClause) Parameters Type Name Description System.Predicate < SharpCompress.Archives.IArchiveEntry > whereClause | Improve this Doc View Source UnZipFile(FolderObject, FileOption, Boolean) Declaration public void UnZipFile(FolderObject folder, FileOption option, bool extractFullPath = false) Parameters Type Name Description FolderObject folder FileOption option System.Boolean extractFullPath Implements System.IDisposable IFileObject"
  }
}